%=========================================================================
% (c) Michal Bidlo, Bohuslav Køena, 2008

\chapter{Úvod}

%\section{Musíme mít co øíci}
Dnes mezi velmi se roz¹iøující technologie na poli sí»o
%\section{Musíme vìdìt, komu to chceme øíci}

%\section{Musíme si dokonale promyslet obsah}

%\section{Musíme psát strukturovanì} 

\chapter{XMPP}

V následující kapitole jsou, pro usnadnìní a jednodu¹¹í pochopení, rozebrány základní stavební kameny protokolu Extensible Messaging and Presence Protocol (XMPP). Konkrétnì jsou zde popsány stávající vlastnosti implementace, architektura protokolu XMPP obecnì \cite{Rfc3920, Rfc3921} a dal¹í detaily protokolu \cite{Adams, Saint, Moore}. Ty se vztahují k po¾adavkùm na data mining popisovaný v této práci \cite{Xep0163,Xep0060}. Dal¹í informace pou¾ité pro popis a pochopení XML jazyka byly èerpány z \cite{Kosek,Xml5th}.

Vznik samotného protokolu XMPP je datován do roku 2004 (bøezen), kdy na nìj byl pøejmenován Jabber. Pùvodní projekt Jabber byl vytvoøen roku 1998 autorem Jeremie Miller, který ho zalo¾il za úèelem vytvoøit svobodnou otevøenou IM slu¾bu. Uvedený projekt mìl obsahovat tøi základní vlastnosti, do kterých se zahrnují jednoduchost a srozumitelnost pro implementaci, jednoduchost v oblasti ¹íøení a otevøenost podobì veøejnì dostupného popisu samotného protokolu. Základní vlastnosti a výhody klientù a serverù budou podrobnìji popsány ní¾e. Roku 1999, 4.ledna byl vytvoøen první server se jménem Jabber. Komunita vývojáøù se chopila iniciativy a vytvoøila klienty, kteøí dokázali se serverem komunikovat, pro rùzné platformy (Linux, Macintosh, Windows). Roku 2004 byl protokol XMPP pøidán mezi RFC (request of comments - ¾ádost o komentáøe) dokumenty. Základní norma popisující obecnou strukturu protokolu je RFC 3920 \cite{Rfc3920} a RFC 3921 \cite{Rfc3921}, který se zamìøuje na samotný instant messaging a zobrazení stavu. Dal¹í zdokumentovaná roz¹íøení jsou vydávána v podobì tzv. XEP (XMPP Extension Protocol) dokumentù, které jsou známé také pod star¹ím názvem JEP (Jabber Enhancement Proposal). Dne¹ní poèet tìchto norem se blí¾í k èíslu 300. Ka¾dý XEP obsahuje status a stav vývoje (schválení), ve kterém se zrovna nachází. 

Jako bezpeènostní prvky jsou zde podporovány SASL, TLS a GPG. XMPP protokol je postaven na obecném znaèkovacím jazyce XML, proto vlastnosti popsané v kapitole \ref{Xml} platí i pro tento protokol.
%\begin{enumerate}
%\item ==znaková sada
%\end{enumerate}


\section{Architektura}
Dobøe navr¾ená architektura tvoøí základ pro správnì fungující internetovou technologii \cite{Adams,Saint}. XMPP protokol vyu¾ívá decentralizované klient--server slo¾ení. Tato struktura se nejvíce podobá struktuøe posílání e--mailù. V tomto pøípadì je decentralizace sítì chápána jako inteligentní nezávislost mezi vývojáøi klientù a serverù. Ka¾dý z nich má mo¾nost zamìøit se na dùle¾ité èásti svého vývoje. V pøípadì server se jedná o spolehlivost a roz¹iøitelnost a u klient na u¾ivatele. Ka¾dý server pracuje samostatnì, co¾ znamená, ¾e chod ani výpadek jiné datové stanice ¾ádným zpùsobem jeho bìh neovlivní. V pøípadì výpadku jiného serveru bude nedostupný pouze seznam kontaktù a slu¾eb, které registrovaným u¾ivatelùm poskytoval. 

Obrázek \ref{pic4} znázoròující distribuovanou architekturu Jabberu byl pøevzat z \cite{Adams}. Komunikace dvou Jabber klientù probíhá za úèasti jejich serverù a sítì, která je spojuje. Spojení mezi nimi bývá èasto ¹ifrováno.
\begin{figure}[h]
\begin{center}
\input{struktura}
\caption{Distribuovaná architektura Jabber.}
 \label{pic4}
\end{center}
\end{figure}

Architektura Jabber serverù vyu¾ívá velké mno¾ství mezi--doménových pøipojení podobnì jako internetový systém elektronické po¹ty. Komunikace klienta z jedné domény s klientem z jiné na rozdíl od e--mailového modelu nevy¾aduje spolupráci tøetích stran. Klient se spojí s \uv{domácím} serverem, který pøímo navá¾e spojení se servem po¾adováného klienta. Tyto vlastnosti jsou zárukou pro bezpeèný pøenos zpráv, znemo¾òující \uv{kráde¾e} JID\footnote{u¾ivatelské jméno}, který je popsán ní¾e, a spamování.

\subsubsection*{Jabber ID}\label{jid}
Jabber ID (JID) je jednoznaèný virtuální identifikátor u¾ivatele na síti. V pøípadì zalo¾ení úètu nejsou rozli¹ována velká a malá písmena, co¾ znamená, ¾e  Jabber není case--sensitive.  Jednoznaèný Jabber identifikátor je slo¾en ze dvou èástí \textit{Jabber bare} nebo--li èisté ID a \textit{resource} \cite{Rfc3920}. Základní èást na první pohled pøipomíná e--mailovou adresu \textit{user@server}. Druhá èást slou¾í k pøesné identifikaci jednotlivých spojení. Je pou¾ita ke smìrování trafiku s u¾ivateli v pøípadì otevøení vìt¹ího mno¾ství spojení pod jedním u¾ivatelem. Spoleènì Jabber bare a resource tvoøí tzv. \textit{full JID} --- \textit{user@server/resource} napøíklad \textit{jabInfo@jabbim.cz/bot}. Jednotlivé èásti èásti u¾ivatelského jména popsané v tomto odstavci jsou ukázány v obrázku \ref{picJabinfo}.
\begin{figure}[h]
\begin{center}
\input{jabinfo}
\caption{Rozebraná struktura Jabber ID.}
 \label{picJabinfo}
\end{center}
\end{figure}

Dal¹í vymo¾enost JabberID oproti e--mailové adrese je jeho mo¾nost pou¾ívat prakticky libovolné národní znaky u doménových jmen a u¾ivatelských úètù \cite{Saint}. Vyu¾íváním kódování UNICODE, se XMPP stává plnì mezinárodní a není jako jiné protokoly omezen rozsahem ASCII tabulky. Pøesto¾e je tato vymo¾enost k dispozici, doposud není ¾ádným výrazným zpùsobem vyu¾ívána.

\subsection*{Klient}
Klient je pøedev¹ím plnì ovládatelný grafický program podporující jednoduché odesíláni zpráv. V této práci je v¹ak zastoupen robotem s konzolovým rozhraním. XMPP svou architekturou nutí, aby byl co nejjednodu¹¹í. Vlastnosti, které by mìl mít jsou shrnuty do tøí bodù \cite{Moore}:
\begin{enumerate}
 \item komunikace se serverem pomocí TCP soketu
 \item rozparsování a následná interpretace pøíchozí XML zprávy \uv{stanza} (kapitola \ref{Stanza})
 \item porozumìní sadì zpráv z Jabber jádra
\end{enumerate}


\subsection*{Server}
K hlavním charakteristikám serveru oproti klientovi, jeho¾ základní vlastností byla jednoduchost, patøí stabilita a bezpeènost. Standardnì bì¾í na TCP portu 5222 \cite{Moore}. Komunikace mezi servery je realizována pøes port 5269. Ka¾dý server uchovává seznam zaregistrovaných u¾ivatelù, který nevykazuje ¾ádný jiný server. Zaregistrovaní u¾ivatelé v daném seznamu se mohou do sítì pøipojovat pouze pøes nìj. To zaji¹»uje nemo¾nost \uv{kráde¾e} úètu. Proto¾e XMPP komunikace probíhá pøes sí», musí mít ka¾dá entita adresu, v tomto pøípadì nazvána JabberID. XMPP spoléhá na DNS co¾ znamená ¾e pou¾ívá jména na rozdíl od IP protokolu.

Server Jabber je pova¾ován za \uv{deamona}, který spravuje tok dat mezi jednotlivými komponentami, které spoleènì tvoøí Jabber slu¾by \cite{Moore}. Napøíklad \textit{Jabber Session Manager} (JSM) poskytne funkce pro IM komunikaci a práci se seznamem kontaktù. Komunikace mezi jednotlivými servery je zprostøedkována za pomocí komponenty \textit{S2S} (server to server). Pøi pøipojení klienta k serveru je komunikace øízená pomocí \textit{C2S} (client to server). Jak ji¾ bylo øeèeno Jabber sí» vyu¾ívá doménová jména místo ¹patnì zapamatovatelných IP adres. Pro tento zpùsob identifikace je urèena slu¾ba \textit{dnsrv}, která názvy pøekládá.

V tabulce \ref{tab4} jsou shrnuty informace o serverech Jabberu. První sloupec tvoøí jméno, následuje programovací jazyk v nìm¾ je napsán. Vìt¹ina aplikací pro servery je vydávána pod licencí GPL\footnote{General Public License-v¹eobecná veøejná licence GNU}. U v¹ech software byla zkoumána nejaktuálnìj¹í verze. Její èíslo lze naleznout ve tøetím sloupci. V¹echny servery lze provozovat na operaèním systému Linux a Windows. Na platformì Mac OS mohou být pou¾ity v¹echny zde jmenované vyjma jabberd2. Pìt z ¹esti zde pøedstavených software pro server Jabber jsou ve stále vyvíjeny, tedy kromì jabberd14. Hlavním úèelem tabulky je prezentovat dùle¾ité vlastnosti serverù v oblasti podpory roz¹íøených statusù. Jedná se o standardy \textit{pubsub}\footnote{Publish--Subscribe} (XEP--0060) \cite{Xep0060} a o jeho verzi zamìøenìj¹í více na u¾ivatele \textit{pep}\footnote{Personal Eventing Protocol} (XEP--0163) \cite{Xep0163}. Obì tato roz¹íøení tvoøí nezbytnou základnu pro \textit{roz¹íøené statusy} a proto je jejich podpora jak u serverù tak klientù vy¾adována. Podrobnìji toto téma bude rozebráno v podkapitole \ref{Rozsireni}.


\begin{table}[h]
\begin{center}
\begin{tabular}{ l  c  c  c  c } 
\rowcolor[gray]{0.9}
\textbf{Server} & \textbf{Jazyk}  & \textbf{Verze} & \textbf{XEP--0060} 			& \textbf{XEP--0163}\\
ejabberd	& Erlang/ Top     & 2.1.6          & ANO					& ANO\\
Openfire	& java            & 3.6.4          & ANO					& ANO\\
jabbred2    	& c               & 2.2.11         & NE						& NE\\
%jabbred14	& c, c++          & 1.6.1.1        & ANO%\footnote{by add on Idavoll(Python)}	& NE\\
%Prosody	    	& lua             & 0.7.0          & NE \footnote{oèekává se a¾ od verze 0.9}	& ANO\\
jabbred14	& c, c++          & 1.6.1.1        & ANO					& NE\\
Prosody	    	& lua             & 0.7.0          & NE 					& ANO\\
Tigase		& java            & 5.0.0          & ANO					& ANO\\ \hline
\end{tabular}
\caption{Pøehled Jabber serverù.}
\label{tab4}
\end{center} 
\end{table}

Z vý¹e uvedené tabulky je zøejmé, ¾e aplikace pro servery, které jsou stále ve vývoji, podporují tzv. \textit{roz¹íøené statusy}. Tedy kromì programu jabbred2.

\section{XML}\label{Xml}
Jazyk XML (eXtensible Markup Language) \cite{Xml5th}, metajazyk pro deklaraci strukturovaných dat, je jádrem protokolu XMPP. Samotný jazyk vznikl roz¹íøením metajazyka SGML, je¾ slou¾í na deklaraci rùzných typù dokumentù. Základní vlastností je jednoduchá definice vlastních znaèek (tagù). Dokument XML se skládá z elementù, je¾ mù¾eme navzájem zanoøovat. Vyznaèujeme je pomocí znaèek - poèáteèní a ukonèovací. Pomocí tohoto jazyka je tvoøena stanza popsaná v kapitole \ref{Stanza}.

Ukázka mo¾né struktury dokumentu psaného jazykem XML je zobrazena na pøíkladu \ref{picXML}. Standardnì je pøedpokládáno, ¾e je psán v kódování UTF-8 \cite{Kosek}, ale je--li jako v tomto pøípadì pou¾ito jiné musí být konkrétní kódování uvedeno na jeho poèátku. V opaèném pøípadì nemusí být obsah správnì zobrazen. Na zaèátku dokumentu se také uvádí verze XML, ve které je dokument psán (1. øádek obrázku). Následuje koøenový element, je¾ je uzavøen na samotném konci dokumentu. 4. øádek prezentuje mo¾nost pou¾ití prázdného elementu, který obsahuje jeden atribut s názvem zkratky fakulty. Velký význam zde mají úhlové závorky. Jsou jimi z obou stran obaleny v¹echny elementy. 

\begin{figure}[h]
\lstset{language=XML ,caption={Ukázka základního XML dokumentu.},label=picXML}
\begin{lstlisting}
            <?xml version="1.0" encoding="iso-8859-2"?>
            <fakulta>
              <název>Fakulta informaèních technologií</název>
              <zkratka fakulty="FIT"/>
              <typy studia>
                <bakaláøské titul="Bc."></bakaláøské>
                <magisterské></magisterské>
                <doktorské></doktorské>
              </typy studia>
            </fakulta>
\end{lstlisting}
\end{figure}

\section{Stanza}\label{Stanza}
Základní jednotkou pro komunikaci zalo¾enou na XML je stanza. Z jednodu¹¹ího pohledu je mo¾né se na ni dívat jako na jeden dlouhý XML soubor. Pøi zahájení komunikace se tento soubor \uv{otevøe}. Jeho samotné uzavøení probíhá a¾ pøi odhlá¹ení od sítì, nebo--li pøepnutí klienta do stavu offline. Stanzu je tedy mo¾né vnímat jako stream, který obsahuje v¹echna data probíhající komunikace. Mezi elementy pou¾ívané pro komunikaci klienta se serverem patøí tyto tøi: \textit{message}, \textit{presence} a \textit{iq}. Ka¾dý zde uvedený èlen má svùj jednoznaèný význam. V následujících odstavcích jsou jednotlivé èásti stanzy blí¾e definovány a na reprezentativních pøíkladech jsou ukázány jejich základní struktury a mo¾nosti vyu¾ití v praxi.

První prvek o kterém se zmíníme je oznaèen anglickým výrazem pro slovo zpráva--\textit{message}. Jak ji¾ název napovídá slou¾í k posílání zpráv v¹eho druhu.
%\subsection*{Message}
%XML element prvního zanoøení slou¾í k posílání zpráv v¹eho druhu. 
Je to základní metoda pro rychlý pøenos informací z místa na místo. Zprávy jsou typu \uv{push}, co¾ znamená ¾e jsou odeslány a není oèekávána ¾ádná aktivita od pøíjemce, která by pøijetí potvrdila. Jedno z mo¾ných vyu¾ití se nachází v klasické komunikace po internetu, tzv. instant messaging (IM). K dal¹ím mo¾ným pou¾itím patøí skupinový chat a oznamovací nebo upozoròující zprávy. Ka¾dá z tìchto zpráv je tvoøena z minimální povinné struktury. Tak jako u klasické po¹tovní korespondence nesmí chybìt adresa odesílatele a adresa pøíjemce, kterému je zpráva adresována. Podle mo¾nosti pou¾ití jsou zprávy dìleny do kategorií. Jmenovitì toto rozdìlení implementuje atribut \textit{type}, který mù¾e nabývat jednu ze ètyø hodnot. Jsou rozli¹ovány zprávy pro komunikaci mezi dvìma entitami, skupinový chat, upozornìní, chybová zpráva a v neposlední øadì zpráva bez kontextu vy¾adující odpovìï pøíjemce. Nakonec nesmí být opomenut blok zprávy, pro u¾ivatele IM nejdùle¾itìj¹í, nesoucí vlastní obsah.
 
Základní pou¾ití struktury elementu \textit{message} je prezentováno na pøíkladu \ref{picMessage}. Na prvním øádku je uveden atribut, znaèící odesílatele. Druhý øádek opìt obsahuje klientùv JID, který zprávy pøijímá. Následuje informace o typu zprávy a poté je uveden element \textit{body} nesoucí samotný obsah.

\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{message}.},label=picMessage}
\begin{lstlisting}
                  <message from="uzivatel@jabbim.com"
                           to="jabinfo@jabbim.com/bot"
                           type="chat"
                     <body> Kolik je hodin? </body>
                  </message>
\end{lstlisting}
\end{figure}

%\subsection*{IQ}
Dal¹í èástí stanzy je poskytována struktura  pro \textit{request--response} (¾ádost--odpovìï) vazbu a wokrflows, podobný metodám GET, POST a PUT z protokolu HTTP \cite{Saint}. Zkrácenì je oznaèována pomocí dvou poèáteèních písmen \textit{Info/Query} nebo--li IQ. Na rozdíl od elementu \textit{message} tvoøí \textit{iq} spolehlivìj¹í pøenos,  optimalizovaný pro výmìnu dat (binární data). K dal¹ím rozdílùm patøí povinnost pøíjemce odpovìdìt na ka¾dou pøijatou zprávu, nebo--li potvrdit její doruèení. Skuteènost, ¾e je na právì po¾adovanou zprávu odpovìzeno, zaji¹»uje parametr \textit{id}. Iq dotaz nebo odpovìï musí obsahovat stejnou hodnotu tohoto atributu jako zpráva vytvoøená ¾ádajícím subjektem. Dal¹í povinný atribut rozdìluje iq na ètyøi typy. Jednotlivé ¾ádosti na proces nebo akci jsou posílány samostatnì \cite{Rfc3921}. V pøíloze \ref{Estanza} je uvedena rozsáhlej¹í struktura tohoto elementu.

Obrázek \ref{picIq} znázoròuje základní pou¾ití elementu \textit{iq}. U¾ivatel \textit{uzivatel} posílá dotaz na získání kontakt listu (øádek 5.).

\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{iq}.},label=picIq}
\begin{lstlisting}
                  <iq from="uzivatel@jabbim.com/doma"
                      to="uzivatel@jabbim.com"
                      id="uhhfw23648"
                      type="get"
                     <query xmlns="jabber:iq:roster"/>
                  </iq>
\end{lstlisting}
\end{figure}

Celá struktura elementu \textit{iq} je zobrazena v pøíloze \ref{Estanza}. Pou¾ití nachází v pøípadech, které nìco nastavují, ¾ádají nebo informace posílají. Jako praktické uplatnìní uvedeme novou registraci, posílání kontakt listu a dal¹í.

%\subsection*{Presence}

Poslední a pro tuto práci nejdùle¾itìj¹í prvek stanzy je \textit{presence}. V pøípadì, ¾e nemá urèeného pøíjemce, tak funguje zpùsobem jako broadcast. Co¾ znamená smìrování informací v¹em klientùm, kteøí jsou zaregistrování k jejímu odbìru. Presence nebo--li volnì pøelo¾eno do èe¹tiny informace o stavu (pøítomnost) rozesílá dostupnost ostatních entit v síti. Není to nic jiného ne¾ tak jako na jiných real--time komunikaèních a sociálních systémù nastavení u¾ivatelské dostupnosti. 

Existuje nìkolik základních stavù statusù, které reprezentují aktuální dosa¾itelnost u¾ivatele. Tento jev je vyjádøen pomocí elementu \textit{show}, který disponuje ètyømi mo¾nostmi. První oznamuje, ¾e je u¾ivatel k dispozici a schopen aktivní komunikace. Druhá èasto se vyskytující mo¾nost naznaèuje, ¾e je subjekt krátkou dobu pryè od svého IM klienta. Tento a dal¹í dva stavy, popsané dále, jsou èasto zmìnìny bez lidského zásahu (pomocí pc nebo jiného zaøízení) prostøednictvím funkce známé jako \uv{auto--away}. Poslední dva stavy charakterizují del¹í èasové období neèinnosti. Tato oznámení o zmìnì stavu u¾ivatele jsou èasto zasílána pouze kontaktùm, kteøí se nacházejí v re¾imu online. Tato optimalizace pøispívá ke sní¾ení sí»ového provozu, jeliko¾ presence v reálném èase pøi komunikaci vyu¾ívá velké mno¾ství ¹íøky pásma.

Základní pou¾ití \textit{presence} je zobrazeno na obrázku \ref{picPresence}. Kontakt \textit{jabinfo@jabbim.com/bot} (1.øádek) posílá informace o svém stavu (øádek è.2) a svùj status (è.3).
\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{presence}.},label=picPresence}
\begin{lstlisting}
                  <presence from="jabinfo@jabbim.com/bot"
                     <show> online </show>
                     <status> Jsme zde. </status>
                  </presence>
\end{lstlisting}
\end{figure}

Obsáhlej¹í struktura elementu \textit{presence} je zobrazena v pøíloze \ref{Estanza}, kde je rovnì¾ k nalezení pøehled v¹ech mo¾ných stavù.

Jak ji¾ bylo zmínìno v èásti o Jabber ID Jabber podporuje práci s více souèasnì pøipojenými klienty k jednomu Jabber úètu. Jako pøíklad uveïme u¾ivatele pøihlá¹eného na stolním poèítaèi a z klienta v mobilním telefonu. U obou tìchto pøipojení je pou¾ito stejného Jabber bare, ale odli¹ného resource, napøíklad \textit{domov} a \textit{mobile}. Právì tento rozdíl v tzv. \uv{full} adrese úètu zaji¹»uje jednu ze dvou mo¾ných podmínek pro správnou adresaci zpráv. Druhá mo¾nost, která bude uplatnìna pøi pou¾ití adresy úèty pouze ve formì Jabber bare, je nastavení priority u jednotlivých programù. Priorita je èíslo v rozsahu hodnot od -128 do 127, kde klient s vìt¹í prioritou má pøednost pøed klientem s prioritou ni¾¹í. Nastane--li pøípad pøipojení více klientù se stejnou prioritou, ka¾dý server se pøi rozesílání zpráv zachová podle vlastní implementace. Nìkteré roze¹lou zprávy v¹em klientùm, jiné naopak jen poslednímu pøihlá¹enému.

\section{Roz¹íøení}\label{Rozsireni}
Dále se tato práce zabývá roz¹íøeními protokolu XMPP o dal¹í vlastnosti k jejich¾ popisu slou¾í XEP. Pro tuto práci jsou nepostradatelné \uv{statusy}, které popisují standardy XEP--0060 \cite{Xep0060} a XEP--0163 \cite{Xep0163} zkrácenì PEP \footnote{Personal Eventing via Pubsub}. Obì tato roz¹íøení umo¾òují strukturovanì pracovat, pou¾ívat a pøená¹et dal¹í XEP protokoly. Jako pøíklady relevantní k práci jsou zde uvedeny protokoly \textit{User Location} (kde se u¾ivatel právì nachází) \cite{Xep0080}, User Tune (co u¾ivatel poslouchá za hudbu) \cite{Xep0118}, User Mood () \cite{Xep0107} a User Activity () \cite{Xep0108}. Jsou to tedy protokoly zalo¾ené na PEP, které vy¾adují podporu nejen v klientech, ale i na stranì serveru (zobrazuje tabulka \ref{tab4}). S touto informací úzce souvisí dal¹í protokol XEP--0115 \cite{Xep0115}, který umo¾òuje zjistit podporované schopnosti klienta, pøípadnì které informace je ochoten pøijímat viz \ref{XEP-0115}.

V¹echna tato roz¹íøení by mohla být pøidána pøímo do statusu viz \ref{picPresence}, av¹ak ten je primárnì urèen k informování o pøítomnosti na IM síti. Hlavní rozdíl mezi PEP a obyèejným posílání stavu pomocí presence je v pravomoci klienta pøijmout nebo odmítnou informaci, na rozdíl od presence, je¾ je pøijata v¾dy.

Základ pøenosu informací zaèíná na stranì klienta, je¾ chce v¹echny ve svém roster (kontakt) listu informovat. Za¹le zprávu obalenou v elementu \textit{iq} serveru. Pøíklad této zprávy je ukázán na obrázku \ref{picPep}, který znázoròuje zaslání informaci o druhu hudby, kterou v danou chvíli poslouchá. Vyu¾ívá k tomu roz¹íøení User Tune, definovaném na øádku èíslo 5. Základ zprávy oznamující zaèátek vysílání informací o roz¹íøených statusech je v¾dy stejný. Li¹í se pouze øádkem 3. a obsahem elementu item v obrázku \ref{picPep}.

\begin{figure}[h]
\lstset{language=Xml ,caption={Zaèátku vysílání roz¹íøeného statusu.},label=picPep}
\begin{lstlisting}
       <iq from='uzivatel@jabbim.com' type='set' id='pub1'>
          <pubsub xmlns='http://jabber.org/protocol/pubsub'>
             <publish node='http://jabber.org/protocol/tune'>
                <item>
                   <tune xmlns='http://jabber.org/protocol/tune'>
                      <artist>Daniel Landa</artist>
                      <length>255</length>
             ...
\end{lstlisting}
\end{figure}

V pøípadì úspì¹ného pøijetí \textit{iq} zprávy serverem, ka¾dý, kdo se zaregistroval k odebírání roz¹íøené statusy, obdr¾í oznámení ve formì \textit{message}. Oznámení také obdr¾í v¹echny va¹e resources. Celá zpráva i v¹echny dal¹í nále¾itosti jsou uvedeny v pøíloze \ref{Erozsireni}.

%\begin{figure}[h]
%\begin{verbatim}
%  1.  <message from='uzivatel@jabbim.com' type='set'
%  2.           to='jabinfo@jabbim.com/bot' id='pub1'>
%  3.     <event xmlns='http://jabber.org/protocol/pubsub#event'>
%  4.        <items node='http://jabber.org/protocol/tune'>
%  5.           <item>
%  6.              <tune xmlns='http://jabber.org/protocol/tune'>
%  7.                 <artist>Daniel Landa</artist>
%  8.                 <length>255</length>
%  9.                 ...
%\end{verbatim}  
%\caption{Pøíklad 2. Zúèastnìné strany obdr¾í upozornìní na události.}
% \label{picPep1}
%\end{figure}

\subsubsection*{XEP-0115: Schopnosti subjektu}\label{XEP-0115}
Pomocí protokolu Entity Capabilities \cite{Xep0115} je mo¾né zjistit vlastnosti klienta. Tato informace výraznì sni¾uje poèet a velikost komunikací a pøenosù zpráv mezi u¾ivateli. Dotazem zobrazeným na obrázku \ref{picCap} je zji¹tìna schopnost jednotlivých klientù, kterou následnì server vyu¾ije pro správné smìrování roz¹íøených statusù. V¹echny zde zmiòované roz¹íøení a protokoly z kapitoly \ref{Rozsireni} je mo¾né u ka¾dého klienta (seznam klientù obsahuje tabulka v pøíloze \ref{Erozsireni}) vyèíst z atributu \textit{ver} (druhá èást u atributu node), který je vypoèítán ze v¹ech podporovaných protokolù klienta, viz \cite{Xep0115}.

\begin{figure}[h]
\lstset{language=XML ,caption={Dotaz na podporované protokoly.},label=picCap}
\begin{lstlisting}
  <iq from="uzivatel@jabbim.com" id="disco1"
      to="jabinfo@jabbim.com/bot" type="get">
     <query xmlns="http://jabber.org/protocol/disco#info"
        node="http://code.google.com/p/exodus#QgayPKawpkPSDYmwT/WM94uAlu0="/>
  </iq>
\end{lstlisting}
\end{figure}
%\section{Knihovny}
%Jabber je realizován jako otevøený XML standart pro instant messaging formát, proto existuje mnoho programovacích jazykù. Vìt¹ina z nich 
%disponuje nìkolika knihovnami, usnadòující práci s protokolem XMPP. V tabulce \ref{tab5} jsou pro nejznámìj¹í programovací jazyky zobrazeny dostupné knihovny.
%\begin{table}[ht]
%\begin{center}
%begin{tabular}{ l  l} 
%\rowcolor[gray]{0.9}
%\textbf{Programovací jazyk} 	& \textbf{knihovna} \\
%C				& iksemel, libstrophe, Loudmoutn  \\
%C++				& gloox, Iris\\
%JAVA    			& JabberBeans, Smack, JSO, Feridian, Emite, minijingle\\
%.NET				& Jabber-Net, agsXMPP SDK\\
%Python			    	& JabberPy, PyXMPP, SleekXMPP, Twisted Words\\
%Perl			    	& Net-Jabber\\
%Ruby				& XMPP4R, Jabber4R, Jabber::Simple, Jabber::Bot         \\ \hline
%\end{tabular}
%\caption{Pøehled Jabber knihoven}
%\label{tab5}
%\end{center} 
%\end{table}



\chapter{Data mining}
...
%cite z %intro_dm.pdf,...
%co je v thek kappitole 

%Anglický filozof Bacon kdysi øekl, ¾e ve znalostech je síla (Knowledge itself is a power.

%Na úvod kapitoly jsou definovány základní pojmy, jez zde budou pou¾ívány. Mezi základní patøí data mining neboli èesky.... Definic tohoto výrazu se v odborné literatuøe obìvuje nìkolik. Zde uvedená je kombinací dvou \uv{definic}[...].

\subsection*{Terminologie}
Pojem data mining nebo--li èesky dolování dat se zaèal ve vìdeckých kruzích objevovat poèátkem 90. let 20. století. První zmínka pochází z konferencí vìnovaných umìlé inteligenci (IJCAI'89 \footnote{International Joint Conference on Artificial Intelligence}--mezinárodní konference konaná v Detroitu, AAAI'91 \footnote{Association for the Advancement of Artificial Intelligence} a AAAI'93--americké konference v Californii a Washingtonu, D.C). 

Tradièní metoda získání informací z dat je realizována jejich manuální analýzou a interpretací. V praxi ji napøíklad nalezneme v odvìtví zdravotnictví, vìdy, marketingu (efektivita reklamních kampaní, segmentace zákazníkù) a dal¹ích. Pro tato a mnoho dal¹ích disciplín je manuální zpracování pøíli¹ pomalé, drahé a vysoce subjektivní. Na druhou stranu velikost dat dramaticky vzrostla tudí¾ se manuální analýza stává zcela nepraktická. Databáze rychle rostou ve dvou kategoriích :
\begin{enumerate}
   \item poèet záznamù nebo--li objektù v databázi
   \item poèet polí nebo--li atributù objektù v databázi
\end{enumerate}

Proces data mining je pouze jedna èást z odvìtví nazývané dobývání znalostí z databází nebo--li KDD\footnote{Knowledge Discovery in Database} definované ní¾e \ref{KDD}. Vznik disciplíny KDD je dùsledkem nepøeberného mno¾ství automaticky sbíraných dat, která je potøeba dále vyu¾ívat. Podstatným znakem celého procesu je správnost reprezentace výsledkù formou u¾ivateli nejbli¾¹í. Jako pøíklad uveïme implikace ve tvaru rozhodovacích pravidel, asociaèní pravidla, rozhodovací stromy, shluky podobných dat a dal¹í. Základem KDD je praktická pou¾itelnost metod. Oèekává se zji¹tìní nových skuteèností namísto prezentování ji¾ známých informací.

\newtheorem{definice}{Definice}[section]
\begin{definice}\label{KDD}
  \textnormal {
KDD je chápáno jako interaktivní a iterativní proces tvoøený kroky selekce, pøedzpracováním, transformace, vlastního \uv{dolování} (data--mining viz \ref{Data Mining}) a interpretace \cite{Berka}.
}
\end{definice}

Grafické znázornìní definice \ref{KDD} je popsáno schématem na obrázku \ref{picFayyad}, který ukazuje èasový harmonogram v KDD. Schéma znázoròuje následnost jednotlivých procesù, které tvoøí KDD. KDD je iterativní proces. Skuteènosti nalezené v pøede¹lých èástí zjednodu¹ují a zpøesòují vstupy pro následující fáze. Jakmile jsou znalosti získány, jsou pøedvedeny u¾ivateli. Pro pøesnost mù¾e být èást procesu KDD je¹tì upravena. Tím budou získány \uv{pøesnìj¹í a vhodnìj¹í} výsledky.

\begin{figure}[h]
\begin{center}
\input{datamining}
\caption{Proces dobývání znalostí z databází podle knihy autora Fayyad \cite{Fayyad}.}
 \label{picFayyad}
\end{center}
\end{figure}

Získávání znalostí z databází je proces slo¾en z nìkolika krokù vedoucích od surových dat k formì nových poznatkù. Iterativní proces se skládá z následujících krokù:

\begin{itemize}
   \item {
    \begin{description}
      \item[èi¹tìní dat] -- fáze, ve které jsou nepodstatné údaje odstranìny z kolekce.
    \end{description}
   }
   \item {
    \begin{description}
      \item[integrace dat] -- kombinování heterogenních dat z nìkolika zdrojù do spoleèného jediného zdroje.
    \end{description}
   }
   \item {
    \begin{description}
      \item[výbìr dat] -- rozhodování o relevantních datech.
    \end{description}
   }
   \item {
    \begin{description}
      \item[transformace dat] -- také známý jako konsolidace dat. Fáze, ve které jsou vybraná data transformována do formy vhodné pro dolování.
    \end{description}
   }
   \item {
    \begin{description}
      \item[data mining] --  zásadní krok, ve kterém jsou aplikovány vzory na data.
    \end{description}
   }
   \item {
    \begin{description}
      \item[hodnocení modelù] -- vzory dat zastupují získané znalosti.
    \end{description}
   }
   \item {
    \begin{description}
      \item[prezentace znalostí] -- koneèná fáze, zji¹tìné poznatky jsou reprezentovány u¾ivateli. Tento základní krok vyu¾ívá vizualizaèní techniky, které pomáhají u¾ivatelùm porozumìt a správnì interpretovat získané výsledky.
    \end{description}
   }
\end{itemize}

Je bì¾né nìkteré z tìchto krokù kombinovat dohromady. Krok èi¹tìní dat a integrace dat mù¾e být provedena spoleènì, tak jako je uvedeno na obrázku \ref{picFayyad}.

%\subsection*{Základní pojmy}
V této podsekci jsou ve struènosti vysvìtleny základní nejdùle¾itìj¹í pojmy dále v práci vyu¾ívané.

Definic výrazu data mining se v odborné literatuøe nachází nìkolik. Zde uvedená je kombinací dvou \uv{definic}. %\textbf{Za pøedchùdce tohoto oboru se pova¾uje vìdní obor statistika, ze které se postupem èasu vyèlenil.}

\begin{definice}\label{Data Mining}
  \textnormal {
Data Mining je proces objevování znalostí, který pou¾ívá rùzné analytické nástroje slou¾ící k odhalení døíve neznámých vztahù a informací z velmi rozsáhlých databází. Výsledkem je predikèní model, který je podkladem pro rozhodování \cite{DM}.
}
\end{definice}

Mezi dal¹í èetnì se vyskytující pojmy v tomto odvìtví patøí napøíklad data, znalosti a informace. Tyto termíny jsou èasto mezi sebou zamìòovány, proto je ní¾e jejich význam striktnì definován.

Jedna z nìkolika existujících definic pojmu data je uvedena v \ref{Data}, která je popisuje z pohledu informaèního. Data èasto nemají sémantiku (význam) a bývají zpracována èistì formálnì.

\begin{definice}\label{Data}
  \textnormal {
Data jsou z hlediska poèítaèového pouze hodnoty rùzných datových typù \cite{IIS}.
}
\end{definice}

Informace definované v \ref{Informace}, jsou zpracovaná data interpretována u¾ivatelem.

\begin{definice}\label{Informace}
  \textnormal {
Informace jsou data, která mají sémantiku (význam) \cite{IIS}.
}
\end{definice}

Znalosti, definované v \ref{Znalosti}, patøí do stejné kategorie jako informace, ale jejich interpretace bývá je¹tì slo¾itìj¹í. Èasto jsou tvoøeny shluky informací, proto bývají reprezentovány jako odvozené informace.
\begin{definice}\label{Znalosti}
  \textnormal {
Znalosti jsou informace po jejich zaøazení do souvislostí \cite{IIS}.
}
\end{definice}

\section{Metody dolovaní dat}
Základ metod dolování dat je zalo¾en na statistice, posledních poznatcích z umìlé inteligence èi strojového uèení. Hlavní cíle tìchto netriviálních metod je spoleèný -- snaha zji¹tìné výsledky prezentovat srozumitelnou formou. Pro vìt¹inu pou¾ívaných metod je spoleèná vlastnost pøedpoklad, ¾e objekty popsané pomocí podobných charakteristik patøí do stejné skupiny (uèení na základì podobnosti similarity-based learning). Objekty obsahující atributy, lze pøevést na body v n--rozmìrném prostoru (n -- poèet atributù). Vychází z pøedstavy podobnosti bodù tvoøící urèité shluky v prostoru.

Tyto dva pøíklady nejsou jediné rozdíly v metodách dolování dat. Dal¹í rozdíly spoèívají v:
\begin{itemize}
   \item schopnost reprezentace shlukù (napø. otázka lineární separability)
   \item srozumitelnost nalezených znalostí pro u¾ivatele (symbolické vs. subsymbolické metody)
   \item efektivnost znovupou¾ití nalezených znalostí
   \item vhodnost typù data
   \item a dal¹í ...
\end{itemize}

Problémy, které data mining øe¹í, se rozdìlují do nìkolika skupin. Výèet vybraných z nich nejèastìj¹ích:

\subsection*{Asociaèní pravidla}
Asociaèní pravidla jsou zalo¾ena na syntaxi IF-THEN. Jejich roz¹íøení se datuje do 90.let 20.století. Pan Agrawal je pøedstavil v souvislosti s analýzou \uv{nákupního ko¹íku}. 

Pou¾itelnost bude vysvìtlena právì na pøíkladu analýzy nákupního ko¹íku. Podstata pøíkladu je tvoøena zákazníkem a jeho systémem nakupování. Jsou zji¹»ovány produkty, které jsou nakupovány souèasnì. Hledáme nebo--li vytváøíme spoleèné vazby (asociaèní pravidla) mezi výrobky a urèujeme jejich spolehlivost. Na základì tìchto závislostí se upravuje umístìní jednotlivých výrobkù.

Obecnì lze tedy asociaèní pravidla pova¾ovat za konstrukci, která z hodnot jedné transakce odvozuje mo¾nost výskytu závislostí v jiných transakcích. Jsou hledány v¹echny vnitøní závislosti mezi daty.

Z pravidel vytvoøených z dat zji¹»ujeme poèet pøíkladù splòujících pøedpoklad a kolik závìr pravidla, kolik pøíkladù splòuje obì podmínky a poèet pøíkladù splòující pouze druhou èást pravidla. Podle knihy Berky \cite{Berka} pøevedeme základní my¹lenku asociaèních pravidel \textit{IF--THEN} do jiné terminologie:
\begin{figure}[h]
\begin{verbatim}
                             Ant => Suc
\end{verbatim}
\end{figure}

kde \textit{Ant} bývá interpretován jednou z mo¾ností výètu -- pøedpoklad, IF, levá strana pravidla nebo ancedent a \textit{Suc} je chápan jako -- závìr, ELSE, pravá strana pravidla, sukcendent. Nyní jsou uvedeny základní vlastnosti:

\textit{n(Ant $\wedge$ Sus) = \textbf{a}}; \textit{n(Ant $\wedge$ $\neg$Sus) = \textbf{b}}; \textit{n($\neg$Ant $\wedge$ Sus) = \textbf{c}}; \textit{n($\neg$Ant $\wedge$ $\neg$Sus) = \textbf{d}}; \textit{n(Ant) = a+b = \textbf{r}}; \textit{n($\neg$Ant) = c+d = \textbf{s}}; \textit{n(Suc) = a+c = \textbf{k}};  \textit{n($\neg$Suc) = b+d = \textbf{l}};  \textit{n = a+b+c+d};

v¹echna pravidla jsou shrnuta v tabulce \ref{tabAsoc}, z nich¾ jsou dále poèítány rùzné charakteristiky a následnì tak hodnotit zji¹tìné znalosti.

\begin{table}[ht]
\begin{center}
\begin{tabular}{ c  c c c} 
\rowcolor[gray]{0.9}
		& \textbf{Suc} 	& \textbf{$\neg$Suc}	&$\sum$\\
Ant		& a		& b			& r\\
$\neg$Ant	& c		& d			& s\\
$\sum$		& k		& l			& n\\ \hline
\end{tabular}
\caption{Kontingenèní tabulka \cite{Berka}.}
\label{tabAsoc}
\end{center} 
\end{table}

Mezi základní charakteristiky asociaèních pravidel podle Agrewalova patøí \textit{podpora} a \textit{spolehlivost}.


\subsection*{Klasifikace}
Klasifikace bude opìt vysvìtlena na pøíkladu. Obsah databáze nebo dotazníku nám ka¾dého klienta banky zaøadí do rùzných krizových skupin. Na základì tìchto skupin pracuje \uv{credit skóring}, je¾ klientovi poskytne nebo odepøe napøíklad úvìr v bance. Dal¹ím pøíkladem je zdravotnictví. Na základì zdravotního stavu pacienta a pøíznakù je zaøazen do tøíd, reprezentující jednotlivé nemoci.

Klasifikace rozdìlí jednotlivé zkoumané elementy (podle hodnot atributù) do vhodných kategorií, které jsou pøedem vytvoøeny navzájem podobnými objekty (tvorba profilù tøídy). Pøi této metodì se upøednostòuje pøesnost pøed jednoduchostí a rychlostí. Je snaha o nalezení obecných závìrù z chování dat. Zdroje klasifikovaných objektù vìt¹inou tvoøí jednotlivé øádky v databázi. Vzory dat vytváøí instance. Jejich vlastnosti reprezentují atributy vyjádøené èíselnou hodnotou.

Z matematického pohledu klasifikace pøedstavuje funkci o více promìnných. Atribut instance odpovídá promìnné a funkèní hodnota výstupu.

\subsubsection*{Modely}
Základem modelù jsou trénovací data. Pøíklad vybraných klasifikaèních modelù:
\begin{itemize}
   \item Rozhodovací stromy
   \item Neuronové sítì
   \item Statistické metody
   \item Klasifikaèní pravidla
   \item Vyu¾ití vzdálenosti
   \item a dal¹í.
 \end{itemize}


\subsection*{Predikce}
Predikce patøí mezi velmi známé procesy, které na základì získaných znalostí pøedpovídají následující vývoj. Chronologicky seøazená data a vývoj jejich hodnot v minulosti tvoøí základ pro urèení hodnot budoucích. Pøedpokládá se, ¾e data v minulosti budou chovat stejnì nebo alespoò podobnì i v budoucnu. Vyu¾ití naleznou v pøedpovìdi poèasí (z namìøených meteorologických hodnot se urèují budoucí pøedpokládané teploty), pøi vývoji cen na burze a dal¹ích.


\subsection*{Shlukování}
Metoda zamìøená na dìlení objektù do pøedem neznámých skupin. Proces dìlení probíhá na základì specifikace objektù a jejich odli¹nosti od ostatních shlukù. Tato èást bude podrobnì rozebrána v následující kapitole \ref{KapShluk}.

\section{Shlukování}\label{KapShluk}
V této podkapitole je shlukování rozdìleno na nìkolik metod shlukové analýzy podle \cite{Han}. U ka¾dé z nich jsou popsány její základní vlastnosti a uvedeny nejroz¹íøenìj¹í algoritmy. Poslední metoda \textit{metoda rozkladu} \ref{MetodyRozkladu} je rozebrána podrobnìji z dùvodu jejího praktického vyu¾ití v této práci.

Shlukování je zamìøeno na dìlení objektù do pøedem neznámých skupin. Proces dìlení probíhá na základì specifikace objektù a jejich odli¹nosti od ostatních shlukù.

Výpoèet vzdáleností mezi objekty patøí, pro vìt¹inu ní¾e uvedených metod a algoritmù, mezi nedílnou souèást. Tato vzdálenost lze vyjádøit rùznými mírami napøíklad \textit{Hammingovou vzdáleností} (dH), \textit{Euklidovskou vzdáleností} (dE) a \textit{Èeby¹evovou vzdáleností} (dC). Rozdíl mezi tìmito typy urèující vzdálenosti, graficky vyjadøuje obrázek è. \ref{picStat}.

\begin{figure}[h]
\begin{center}
\input{statistika}
\caption{Srovnání výpoètu vzdáleností od bodu $x_{1}$ \cite{Berka}.}
 \label{picStat}
\end{center}
\end{figure}

\subsection*{Metody hierarchické}
...
\subsection*{Metody zalo¾ené na møí¾ce}
Metody zalo¾ené na møí¾ce kvantují datový prostor do koneèného poètu pravoúhlých bunìk, které jsou uspoøádány do víceúrovòové møí¾kové struktury. Zmínìná struktura tvoøí základ pro shlukové operace. Hlavní výhoda tohoto pøístupu je rychlost zpracování, které vìt¹inou nebere ohled na poèet datových objektù. Èas zpracování závisí pouze na poètu bunìk v ka¾dé dimenzi kvantovaného prostoru. 

Mezi zástupce metod zalo¾ených na møí¾ce patøí metoda STING\footnote{STatistical INformation Grid}, který pracuje se statickými informacemi ulo¾enými v buòkách møí¾ky. Algoritmus je rozdìlen do dvou èástí. První si klade za cíl rekurzivnì rozdìlit datový prostor na pravoúhlé buòky. Druhá fáze testuje spojitost mezi sousedy relevantních bunìk.

Mezi dal¹í metody zalo¾ené na møí¾ce patøí CLIQUE\footnote{CLustering In QUEst} a WaveCluster\footnote{Clustering Using Wavelet Transformation}. WaveCluster vyu¾ívá vlnkové transformace k rozdìlení prostoru dat. Tato transformace zdùrazòuje shluky v prostoru a objekty jim vzdálené potlaèuje.


\subsection*{Metody zalo¾ené na modelu}
Metody zalo¾ené na modelu se pokou¹í pøiøadit data k urèitému matematickému modelu na základì spoleèných optimalizovaných vlastností. Vìt¹ina procesù je zalo¾ena na pøedpokladu generování dat pomocí standardních statistik.

Mezi zástupné metody této shlukovací analýzy se øadí Expectation--Maximization (EM), SOON\footnote{Self Organizing Oscillator Network} a èásticové filtry (particle filtres). Algoritmus SOON je zalo¾en na neuronové síti. Je to metoda vycházející z algoritmu SOM\footnote{Self--Organizing Map}. Metoda EM je roz¹íøením algoritmus \textit{k--means} o nìm¾ se budeme podrobnì zabývat v následujících èástí \ref{kMeans}.

\subsection*{Metody zalo¾ené na hustotì}
Vychází z \textit{m}--rozmìrného prostoru do nìho¾, jsou zobrazeny objekty ve formì bodù. Místa v prostoru s vìt¹í koncentrací objektù ve srovnáním s ostatními oblastmi jsou nazývány shluky. Jsou to ta místa, která hledáme. Výchozí pøedpoklad je existence okolí jednotlivých bodù (sousedství). Tato metoda se doká¾e vypoøádat s hodnotami velmi vzdálenými oznaèovanými jako ¹um.

Jako pøíklad uveïme metody DBSCAN\footnote{Density--Based Spatial Clustering of Applications with Noise}, OPTICS\footnote{Ordering Points To Identify the Clustering Strukture} a DENCLUE\footnote{DENsity--base CLUstering}. Metoda DBSCAN je zalo¾ena na hustotì objektù v prostoru. U jednotlivých objektù je zkoumáno jejich okolí. Algoritmus je ovlivòován dvìma parametry $\varepsilon$ (velikost shluku) a $MinPts$ (minimální poèet objektù v daném shluku), které spolu úzce souvisí (viz \cite{Han}). Bod splòující obì podmínky je oznaèen za jádro. Pomocí jader se roz¹iøuje mno¾ina objektù spojených na základì hustoty. Obsahuje--li jádro $x_{1}$ ve svém okolí dal¹í jádro $x_{2}$ znamená to, ¾e jádro $x_{1}$ je pøímo dosa¾itelné z jádra $x_{2}$. Tímto zpùsobem se vytváøí výsledné \textit{shluky}. V opaèném pøípadì, body nesplòující dvì zmínìné podmínky, jsou oznaèeny jako \textit{¹um}.

Pøíklad postupu algortimu DBSCAN zobrazuje obrázek è. \ref{dbscan}. Kde $\varepsilon$--sousedství tvoøí kruh a $MinPts$ má hondotu 3.
\begin{figure}[h]
\begin{center}
\input{dbscan}
\caption{Algoritmus DBSCAN \cite{Han}.}
 \label{dbscan}
\end{center}
\end{figure}

\subsection*{Shlukování velkých dat}
V¹echny zde doposud zmiòované metody poskytují dobré výsledky pouze s malým poètem dimenzí. S narùstajícím poètem atributù roste poèet nerelevantních dimenzí urèených pro shlukování. S tímto také pøibývá zvìt¹ená produkce za¹umìní a znesnadnìní nalezení relevantních shlukù. Data jsou roztrou¹ena do mnoho dimenzí a tím odpadá mo¾nost pou¾ití vzdálenostních funkcí.

Zmínìné problémy shlukování velkých dat øe¹í dvì techniky \textit{metoda transformace rysù} a \textit{metoda výbìru atributù}.

Pro efektivní shlukování je mo¾né pou¾ít napøíklad algoritmus CLIQUE\footnote{CLustering In QUEst}, PROCLUS\footnote{PROjested CLUStering}, ENCLUS\footnote{ENntropy--based CLUStering} a dal¹í.
\subsection*{Metody rozkladu}\label{MetodyRozkladu}
...
\subsubsection*{k--Means}\label{kMeans}
...popis a za pis algoritmu
\subsubsection*{k--Medoids}
...




\section{Programy}
\subsection*{Fitminer}
\subsection*{Rapid miner}
\subsection*{Weka}
\chapter{Implementace}
%\section{Slepá ulièka}
%Pùvodní návrh práce od stávajícího se odli¹uje v tìchto bodech:
%\begin{enumerate}
%   \item neustále pøipojen ve stavu invisible
%   \item pøijímat zprávy.
%\end{enumerate}
%První bod nemohl být splnìn kvùli nepodporovanému stavu invisible. Neexistuje ¾ádná schválená ani rozpracovaná verze XEPu, která by ukazovala jak stavu neviditelnosti dosáhnout.
%Druhý bod pùvodního návrh ztroskotal na neschopnosti Jabber klientù a serverù pracovat korektnì s prioritou. V XEP-XXXX se pouze doporuèuje nastavení stejné hodnoty priority do v¹ech resource. Tato vlastnost by mìla poskytnout mo¾nost rozesílat zpráva v¹em zdrojùm daného úètu se stejnou prioritou. Samozøejmì by nesmìl mít ¾ádný jiný zdroj priority vy¹¹í.
\section{Databáze}
\subsection*{Návrh databáze}
\begin{figure}[hb]
\begin{center}
\input{Database1}
\caption{Struktura databáze}
 \label{pic1}
\end{center}
\end{figure}
\section{Architektura}
--robot plus databaze
--rapidminer--spusteni davkove/vlastni algoritmus v PHP
--webova implementace prezentuje vysledky
\section{Robot}
--class diagram, pomoci nej popsat strukturu, mozne rozsireni
\subsection*{gloox}
Gloox je stabilní Jabber/XMPP knihovna vydávána pod licencí GNU GPL. Je urèena pro vývoj klienta a komponent. Jeliko¾ je psána v ANSCI C++ mezi podporované platformy patøí Linux, Windows, Mac OS X, Symbian/Nokia S60, FreeBSD a dal¹í systémy stavìjící na ANSI C++ kompilátor.

Pomocí knihovny gloox je psán bot v této práci. Byla vybrána na základì po¾adavku psaní programu v jazyce C/C++ a operaèním systému Linux. V porovnání s jinými knihovnami pro jazyk C nebo C++ disponuje lep¹í podporou a dokumentací. Gloox plnì podporuje standart XMPP Core \cite{Rfc3920} a z vìt¹í èásti i standard XMPP IM \cite{Rfc3921}. Dodateènì je plnì podporováno kolem 30 XEP standardù napøíklad XEP-0054 vcard-temp a dal¹í.

\subsection*{Návrh bota}
%\section{Knihovny, jazyk}
%\section{Jiné produkty}
\subsection*{Transformace}
temporalni databaze
\chapter{Vyhodnocení výsledkù}
--charakter dat, jaka data jsem nasbiral
--
\chapter{Závìr}
%\cite{Schroter, Ejabberd, Openfire, Jabberd2, Jabberd14, Prosody, Tigase, Xep0060, Xep0163}
%=========================================================================
