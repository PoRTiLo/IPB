% zkontoroovat u vsech xepu datum vyroby:D
%=========================================================================

\linenumbers

\chapter{Úvod}

%\section{Musíme mít co øíci}
Dnes mezi velmi se roz¹iøující technologie na poli sí»o
%\section{Musíme vìdìt, komu to chceme øíci}
Cílem této práce je získat neznámé informace z real--time komunikaèní sítì Jabber. 
%\section{Musíme si dokonale promyslet obsah}

%\section{Musíme psát strukturovanì} 

\chapter{XMPP}

V následující kapitole jsou, pro usnadnìní a jednodu¹¹í pochopení, rozebrány základní stavební kameny protokolu Extensible Messaging and Presence Protocol (XMPP). Konkrétnì jsou zde popsány stávající vlastnosti implementace, architektura protokolu XMPP obecnì \cite{Rfc3920, Rfc3921} a dal¹í detaily protokolu \cite{Adams, Saint, Moore}. 
Vzhledem k po¾adavkùm na dolování v datech popsaných v následující kapitole je kladen dùraz na vybraná roz¹íøení \cite{Xep0163,Xep0060}.  Tato roz¹í¾ení tvoøí základ pro nìkteré roz¹íøené statusy\footnote{User Tune, User Mood, User Locatioan a dal¹í}. Dal¹í informace pou¾ité pro popis a pochopení XML jazyka byly èerpány z \cite{Kosek,Xml5th}.

Vznik samotného protokolu XMPP je datován do roku 2004 (bøezen), kdy na nìj byl pøejmenován Jabber. Pùvodní projekt Jabber byl vytvoøen roku 1998 autorem Jeremie Millerem, který ho zalo¾il za úèelem vytvoøit svobodnou otevøenou IM slu¾bu. Uvedený projekt mìl obsahovat tøi základní vlastnosti, do kterých se zahrnují jednoduchost a srozumitelnost pro implementaci, jednoduchost v oblasti ¹íøení a otevøenost podobì veøejnì dostupného popisu samotného protokolu. Základní vlastnosti a výhody klientù a serverù budou podrobnìji popsány ní¾e. Roku 1999, 4.ledna byl vytvoøen první server se jménem Jabber. Komunita vývojáøù se chopila iniciativy a vytvoøila klienty, kteøí dokázali se serverem komunikovat, pro rùzné platformy (Linux, Macintosh, Windows). Roku 2004 byl protokol XMPP pøidán mezi RFC\footnote{RFC request of comments -- ¾ádost o komentáøe} dokumenty. Základní norma popisující obecnou strukturu protokolu je RFC 3920 \cite{Rfc3920} a RFC 3921 \cite{Rfc3921}, který se zamìøuje na samotný instant messaging a zobrazení stavu. Dal¹í zdokumentovaná roz¹íøení jsou vydávána v podobì tzv. XEP (XMPP Extension Protocol) dokumentù, které jsou známé také pod star¹ím názvem JEP (Jabber Enhancement Proposal). Dne¹ní poèet tìchto norem se blí¾í k èíslu 300. Ka¾dý XEP obsahuje stav vývoje (schválení), ve kterém se zrovna nachází. 

Jako bezpeènostní prvky jsou zde podporovány SASL, TLS a GPG. XMPP protokol je postaven na obecném znaèkovacím jazyce XML, proto vlastnosti popsané dále v této kapitole platí i pro tento protokol.


\section{Architektura}
Dobøe navr¾ená architektura tvoøí základ pro správnì fungující internetovou technologii. Pro její popis v této práci bylo èerpáno z \cite{Adams,Saint}. Tato struktura se nejvíce podobá struktuøe posílání e--mailù. Hlavní pøedností Jabber sítì je, tak jako u elektronické po¹ty, její decentralizace. V pøípadì Jabberu je decentralizace chápána jako mo¾nost provozovat vlastní server (na rozdíl od jiných komunikaèních systémù jako je napøíklad facebook, kde existuje pouze jediný poskytovatel slu¾by). V pøípadì serveru je kladen dùraz na spolehlivost a roz¹iøitelnost a u klienta na u¾ivatele. Ka¾dý server pracuje samostatnì, co¾ znamená, ¾e chod ani výpadek jiné datové stanice ¾ádným zpùsobem jeho bìh neovlivní. V pøípadì výpadku jiného serveru bude nedostupný pouze seznam kontaktù a slu¾eb, které registrovaným u¾ivatelùm poskytoval. 

Obrázek \ref{pic4} znázoròující distribuovanou architekturu Jabberu byl pøevzat z \cite{Adams}. Komunikace dvou Jabber klientù probíhá za úèasti jejich serverù a sítì, která je spojuje. Spojení mezi nimi bývá èasto ¹ifrováno.
\begin{figure}[h]
\begin{center}
\input{struktura}
\caption{Distribuovaná architektura Jabber.}
 \label{pic4}
\end{center}
\end{figure}

Architektura Jabber serverù vyu¾ívá velké mno¾ství mezi--doménových pøipojení podobnì jako internetový systém elektronické po¹ty. Komunikace klienta z jedné domény s klientem z jiné na rozdíl od e--mailového modelu nevy¾aduje spolupráci tøetích stran. Klient se spojí s \uv{domácím} serverem, který pøímo navá¾e spojení se servem po¾adováného klienta. Tyto vlastnosti jsou zárukou pro bezpeèný pøenos zpráv, znemo¾òující \uv{kráde¾e} JID\footnote{u¾ivatelské jméno}, který je popsán ní¾e, a spamování.


\subsubsection*{Jabber ID}\label{jid}
Jabber ID (JID) je jednoznaèný virtuální identifikátor u¾ivatele na síti. V pøípadì zalo¾ení úètu nejsou rozli¹ována velká a malá písmena, co¾ znamená, ¾e  Jabber není case--sensitive. Jednoznaèný Jabber identifikátor je slo¾en ze dvou èástí \textit{Jabber bare} nebo--li èisté ID a \textit{resource} \cite{Rfc3920}. Základní èást na první pohled pøipomíná e--mailovou adresu \textit{user@server}. Druhá èást slou¾í k pøesné identifikaci jednotlivých spojení. Je pou¾ita ke smìrování sí»ového provozu s u¾ivateli v pøípadì otevøení vìt¹ího mno¾ství spojení pod jedním u¾ivatelem. Spoleènì Jabber bare a resource tvoøí tzv. \textit{full JID} --- \textit{user@server/resource} napøíklad \textit{jabInfo@jabbim.cz/bot}. Jednotlivé èásti u¾ivatelského jména popsané v tomto odstavci jsou ukázány v obrázku \ref{picJabinfo}.
\begin{figure}[h]
\begin{center}
\input{jabinfo}
\caption{Rozebraná struktura Jabber ID.}
 \label{picJabinfo}
\end{center}
\end{figure}

Dal¹í vymo¾enost JabberID oproti e--mailové adrese je jeho mo¾nost pou¾ívat prakticky libovolné národní znaky u doménových jmen a u¾ivatelských úètù \cite{Saint}. Vyu¾íváním kódování UNICODE, se XMPP stává plnì mezinárodní a není jako jiné protokoly omezen rozsahem ASCII tabulky. Pøesto¾e je tato vymo¾enost k dispozici, doposud není ¾ádným výrazným zpùsobem vyu¾ívána.

\subsection*{Klient}
Klient je èasto jednoduchá aplikace pracující se vzdálenými slu¾bami, které jsou provozovány serverem. V této práci je zastoupen robotem s konzolovým rozhraním. XMPP svou architekturou nutí, aby byl co nejjednodu¹¹í. Vlastnosti, které by mìl mít jsou shrnuty, podle \cite{Moore}, do tøí bodù:
\begin{enumerate}
 \item komunikace se serverem pomocí TCP soketu
 \item rozparsování a následná interpretace pøíchozí XML zprávy \uv{stanza} (kapitola \ref{Stanza})
 \item porozumìní sadì zpráv z Jabber jádra
\end{enumerate}


\subsection*{Server}
Informace pou¾ité pro popis XMPP serveru byly èerpány z \cite{Moore}. K hlavním charakteristikám serveru oproti klientovi, jeho¾ základní vlastností byla jednoduchost, patøí stabilita a bezpeènost. Standardnì bì¾í na TCP portu 5222. Komunikace mezi servery je realizována pøes port 5269. Ka¾dý server uchovává seznam zaregistrovaných u¾ivatelù, který nevykazuje ¾ádný jiný server. Zaregistrovaní u¾ivatelé v daném seznamu se mohou do sítì pøipojovat pouze pøes nìj. To zaji¹»uje nemo¾nost \uv{kráde¾e} úètu. Proto¾e XMPP komunikace probíhá pøes sí», musí mít ka¾dá entita adresu, v tomto pøípadì nazvána JabberID. XMPP spoléhá na DNS co¾ znamená ¾e pou¾ívá jména na rozdíl od IP protokolu.

Server Jabber je pova¾ován za \uv{deamona}, který spravuje tok dat mezi jednotlivými komponentami, které spoleènì tvoøí Jabber slu¾by. Napøíklad \textit{Jabber Session Manager} (JSM) poskytne funkce pro IM komunikaci a práci se seznamem kontaktù. Komunikace mezi jednotlivými servery je zprostøedkována za pomocí komponenty \textit{S2S} (server to server). Pøi pøipojení klienta k serveru je komunikace øízená pomocí \textit{C2S} (client to server). Jak ji¾ bylo øeèeno Jabber sí» vyu¾ívá doménová jména místo ¹patnì zapamatovatelných IP adres. Pro tento zpùsob identifikace je urèena slu¾ba \textit{dnsrv}, která názvy pøekládá.

V tabulce \ref{tab4} jsou shrnuty informace o serverech Jabberu. První sloupec tvoøí jméno, následuje programovací jazyk v nìm¾ je napsán. Vìt¹ina aplikací pro servery je vydávána pod licencí GPL\footnote{General Public License-v¹eobecná veøejná licence GNU}. U v¹ech aplikací byla zkoumána nejaktuálnìj¹í verze. Její èíslo lze naleznout ve tøetím sloupci. V¹echny servery lze provozovat na operaèním systému Linux a Windows. Na platformì Mac OS mohou být pou¾ity v¹echny zde jmenované vyjma jabberd2. Pìt z ¹esti zde pøedstavených programù pro server Jabber jsou ve stále vyvíjeny, tedy kromì jabberd14. Hlavním úèelem tabulky je prezentovat dùle¾ité vlastnosti serverù v oblasti podpory roz¹íøených statusù. Jedná se o standardy \textit{pubsub}\footnote{Publish--Subscribe} (XEP--0060) \cite{Xep0060} a o jeho verzi zamìøenìj¹í více na u¾ivatele \textit{pep}\footnote{Personal Eventing Protocol} (XEP--0163) \cite{Xep0163}. Obì tato roz¹íøení tvoøí nezbytnou základnu pro \textit{roz¹íøené statusy} a proto je jejich podpora jak u serverù tak klientù vy¾adována. Podrobnìji toto téma bude rozebráno v nìkteré následující podkapitole.


\begin{table}[h]
\begin{center}
\begin{tabular}{ l  c  c  c  c } 
\rowcolor[gray]{0.9}
\textbf{Server} & \textbf{Jazyk}  & \textbf{Verze} & \textbf{XEP--0060} 			& \textbf{XEP--0163}\\
ejabberd	& Erlang/ Top     & 2.1.6          & ANO					& ANO\\
Openfire	& java            & 3.6.4          & ANO					& ANO\\
jabbred2    	& c               & 2.2.11         & NE						& NE\\
jabbred14	& c, c++          & 1.6.1.1        & ANO					& NE\\
Prosody	    	& lua             & 0.7.0          & NE 					& ANO\\
Tigase		& java            & 5.0.0          & ANO					& ANO\\ \hline
\end{tabular}
\caption{Pøehled Jabber serverù.}
\label{tab4}
\end{center} 
\end{table}

Z vý¹e uvedené tabulky je zøejmé, ¾e aplikace pro servery, které jsou stále ve vývoji, podporují tzv. \textit{roz¹íøené statusy}. Tedy kromì programu jabbred2.

\section{XML}\label{Xml}
Jazyk XML (eXtensible Markup Language) \cite{Xml5th}, metajazyk pro deklaraci strukturovaných dat, je jádrem protokolu XMPP. Samotný jazyk vznikl roz¹íøením metajazyka SGML, je¾ slou¾í pro deklaraci rùzných typù dokumentù. Základní vlastností je jednoduchá definice vlastních znaèek (tagù). Dokument XML se skládá z elementù, které mù¾eme navzájem zanoøovat. Vyznaèujeme je pomocí znaèek --- poèáteèní a ukonèovací. Pomocí tohoto jazyka je tvoøena stanza popsaná v následující kapitole.

Ukázka mo¾né struktury dokumentu psaného jazykem XML je zobrazena na pøíkladu \ref{picXML}. Standardnì je pøedpokládáno, ¾e je psán v kódování UTF-8 \cite{Kosek}, ale je--li jako v tomto pøípadì pou¾ito jiné musí být konkrétní kódování uvedeno na jeho poèátku. V opaèném pøípadì nemusí být obsah správnì zobrazen. Na zaèátku dokumentu se také uvádí verze XML, ve které je dokument psán (1. øádek pøíkladu). Následuje koøenový element, který je uzavøen na samotném konci dokumentu. 4. øádek prezentuje mo¾nost pou¾ití prázdného elementu, který obsahuje jeden atribut s názvem zkratky fakulty. Velký význam zde mají úhlové závorky. Jsou jimi z obou stran obaleny v¹echny elementy. 

\begin{figure}[h]
\lstset{language=XML ,caption={Ukázka základního XML dokumentu.},label=picXML}
\begin{lstlisting}
            <?xml version="1.0" encoding="iso-8859-2"?>
            <fakulta>
              <název>Fakulta informaèních technologií</název>
              <zkratka fakulty="FIT"/>
              <typy studia>
                <bakaláøské titul="Bc."></bakaláøské>
                <magisterské></magisterské>
                <doktorské></doktorské>
              </typy studia>
            </fakulta>
\end{lstlisting}
\end{figure}

\section{Stanza}\label{Stanza}
Základní jednotkou pro komunikaci zalo¾enou na XML je stanza. Z jednodu¹¹ího pohledu je mo¾né se na ni dívat jako na jeden dlouhý XML soubor. Pøi zahájení komunikace se tento soubor \uv{otevøe}. Jeho samotné uzavøení probíhá a¾ pøi odhlá¹ení od sítì, nebo--li pøepnutí klienta do stavu offline. Stanzu je tedy mo¾né vnímat jako stream, který obsahuje v¹echna data probíhající komunikace. Mezi elementy pou¾ívané pro komunikaci klienta se serverem patøí tyto tøi: \textit{message}, \textit{presence} a \textit{iq}. Ka¾dý zde uvedený èlen má svùj jednoznaèný význam. V následujících odstavcích jsou jednotlivé èásti stanzy blí¾e definovány a na reprezentativních pøíkladech jsou ukázány jejich základní struktury a mo¾nosti vyu¾ití v praxi.

První prvek, který bude charakterizován je oznaèen anglickým výrazem \textit{message} (zpráva). Jak ji¾ název napovídá slou¾í k posílání zpráv v¹eho druhu.
%\subsection*{Message}
%XML element prvního zanoøení slou¾í k posílání zpráv v¹eho druhu. 
Je to základní metoda pro rychlý pøenos informací z místa na místo. Zprávy jsou typu \uv{push}, co¾ znamená ¾e jsou odeslány a není oèekávána ¾ádná aktivita od pøíjemce, která by pøijetí potvrdila. Jedno z dosavadních vyu¾ití se nachází v klasické komunikace po internetu, tzv. instant messaging (IM). K dal¹ím mo¾ným pou¾itím patøí skupinový chat a oznamovací nebo upozoròující zprávy. Ka¾dá z tìchto zpráv je tvoøena z minimální povinné struktury. Tak jako u klasické po¹tovní korespondence nesmí chybìt adresa odesílatele a adresa pøíjemce, kterému je zpráva adresována. Podle mo¾nosti pou¾ití jsou zprávy dìleny do kategorií. Jmenovitì toto rozdìlení implementuje atribut \textit{type}, který mù¾e nabývat jednu ze ètyø hodnot. Jsou rozli¹ovány zprávy pro komunikaci mezi dvìma entitami, skupinový chat, upozornìní, chybová zpráva a v neposlední øadì zpráva bez kontextu vy¾adující odpovìï pøíjemce. Nakonec nesmí být opomenut blok zprávy, pro u¾ivatele IM nejdùle¾itìj¹í, nesoucí vlastní obsah.
 
Základní pou¾ití struktury elementu \textit{message} je prezentováno na pøíkladu \ref{picMessage}. Na prvním øádku je uveden atribut, znaèící odesílatele. Druhý øádek obsahuje JID klienta, který zprávy pøijímá. Následuje informace o typu zprávy a poté je uveden element \textit{body} nesoucí samotný obsah.

\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{message}.},label=picMessage}
\begin{lstlisting}
                  <message from="user@jabbim.com"
                           to="jabinfo@jabbim.com/bot"
                           type="chat"
                     <body> Kolik je hodin? </body>
                  </message>
\end{lstlisting}
\end{figure}

%\subsection*{IQ}
Dal¹í èástí stanzy je poskytována struktura  pro \textit{request--response} (¾ádost--odpovìï) vazbu, podobnou metodám GET, POST a PUT z protokolu HTTP \cite{Saint}. Zkrácenì je oznaèována pomocí dvou poèáteèních písmen \textit{Info/Query} nebo--li IQ. Na rozdíl od elementu \textit{message} tvoøí \textit{iq} spolehlivìj¹í pøenos, optimalizovaný pro výmìnu dat (binární data). K dal¹ím rozdílùm patøí povinnost pøíjemce odpovìdìt na ka¾dou pøijatou zprávu, nebo--li potvrdit její doruèení. Skuteènost, ¾e je na právì po¾adovanou zprávu odpovìzeno, zaji¹»uje parametr \textit{id}. Iq dotaz nebo odpovìï musí obsahovat stejnou hodnotu tohoto atributu jako zpráva vytvoøená ¾ádajícím subjektem. Dal¹í povinný atribut rozdìluje iq na ètyøi typy. Jednotlivé ¾ádosti na proces nebo akci jsou posílány samostatnì \cite{Rfc3921}. V pøíloze \ref{Estanza} je uvedena rozsáhlej¹í struktura tohoto elementu. Pou¾ití nachází v pøípadech, které nastavují, ¾ádají nebo informace posílají. Tato struktura je vyu¾ívána pro novou registraci, posílání kontakt listu a dal¹í.

Pøíklad \ref{picIq} znázoròuje základní pou¾ití elementu \textit{iq}. U¾ivatel \textit{user} posílá dotaz na získání kontakt listu (øádek 5.).

\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{iq}.},label=picIq}
\begin{lstlisting}
                  <iq from="user@jabbim.com/doma"
                      to="user@jabbim.com"
                      id="uhhfw23648"
                      type="get"
                     <query xmlns="jabber:iq:roster"/>
                  </iq>
\end{lstlisting}
\end{figure}

 

%\subsection*{Presence}

Poslední a pro tuto práci nejdùle¾itìj¹í prvek stanzy je \textit{presence}. V pøípadì, ¾e nemá urèeného pøíjemce, tak funguje zpùsobem jako broadcast. Co¾ znamená, ¾e jsou informace smìrovány v¹em klientùm, kteøí jsou zaregistrování k jejímu odbìru. Presence v èeském pøekladu informace o stavu (pøítomnost) rozesílá dostupnost ostatních entit v síti. Jedná se tedy o nastavení u¾ivatelské dostupnosti tak jako na jiných real--time komunikaèních a sociálních systémù.

Existuje nìkolik základních stavù statusù, které reprezentují aktuální dosa¾itelnost u¾ivatele. Tento jev je vyjádøen pomocí elementu \textit{show}, který disponuje ètyømi mo¾nostmi. První oznamuje, ¾e je u¾ivatel k dispozici a schopen aktivní komunikace. Druhá èasto se vyskytující mo¾nost naznaèuje, ¾e je subjekt krátkou dobu pryè od svého IM klienta. Tento a dal¹í dva stavy, popsané dále, jsou èasto zmìnìny bez lidského zásahu (pomocí pc nebo jiného zaøízení) prostøednictvím funkce známé jako \uv{auto--away}. Poslední dva stavy charakterizují del¹í èasové období neèinnosti. Tato oznámení o zmìnì stavu u¾ivatele jsou èasto zasílána pouze kontaktùm, které se nacházejí v re¾imu online. Tato optimalizace pøispívá ke sní¾ení sí»ového provozu, jeliko¾ presence v reálném èase pøi komunikaci vyu¾ívá velké mno¾ství ¹íøky pásma.

Základní pou¾ití \textit{presence} je zobrazeno v pøíkladu \ref{picPresence}. Kontakt \textit{jabinfo@jabbim.com/bot} (1. øádek) posílá informace o svém stavu (øádek è. 2) a svùj status (è. 3).
\begin{figure}[h]
\lstset{language=Xml ,caption={Pou¾ití elementu \textit{presence}.},label=picPresence}
\begin{lstlisting}
                  <presence from="jabinfo@jabbim.com/bot"
                     <show> online </show>
                     <status> Jsme zde. </status>
                  </presence>
\end{lstlisting}
\end{figure}

Obsáhlej¹í struktura elementu \textit{presence} je zobrazena v pøíloze \ref{Estanza}, kde je rovnì¾ k nalezení pøehled v¹ech mo¾ných stavù.

Jak ji¾ bylo zmínìno v èásti o Jabber ID Jabber podporuje práci s více souèasnì pøipojenými klienty k jednomu Jabber úètu. Vysvìtlení funkènosti bude prezentováno na pøíkladu u¾ivatele pøihlá¹eného na stolním poèítaèi a z klienta v mobilním telefonu. U obou tìchto pøipojení je pou¾it stejný Jabber bare, ale odli¹ného resource, napøíklad \textit{domov} a \textit{mobile}. Právì tento rozdíl v tzv. \uv{full} adrese úètu zaji¹»uje jednu ze dvou mo¾ných podmínek pro správnou adresaci zpráv. Druhá mo¾nost, která bude uplatnìna pøi pou¾ití adresy úèty pouze ve formì Jabber bare, je nastavení priority u jednotlivých programù. Priorita je èíslo v rozsahu hodnot od -128 do 127, kde klient s vìt¹í prioritou má pøednost pøed klientem s ni¾¹í. Nastane--li pøípad pøipojení více klientù se stejnou prioritou, ka¾dý server se pøi rozesílání zpráv zachová podle vlastní implementace. Nìkteré roze¹lou zprávy v¹em klientùm, jiné naopak jen poslednímu pøihlá¹enému.

\section{Roz¹íøení}\label{Rozsireni}
Dále se tato práce zabývá roz¹íøeními protokolu XMPP o dal¹í vlastnosti k jejich¾ popisu slou¾í XEP. Pro tuto práci jsou nepostradatelné \uv{statusy}, pro které tvoøí základ standardy XEP--0060 \cite{Xep0060} a XEP--0163 \cite{Xep0163} zkrácenì PEP\footnote{Personal Eventing via Pubsub}. Obì tato roz¹íøení umo¾òují strukturovanì pracovat, pou¾ívat a pøená¹et dal¹í XEP protokoly. Jako pøíklady relevantní k práci jsou zde uvedeny protokoly \textit{User Location} (kde se u¾ivatel právì nachází) \cite{Xep0080}, User Tune (co u¾ivatel poslouchá za hudbu) \cite{Xep0118}, User Mood () \cite{Xep0107} a User Activity () \cite{Xep0108}. Jsou to tedy protokoly zalo¾ené na PEP, které vy¾adují podporu nejen v klientech, ale i na stranì serveru (zobrazuje tabulka \ref{tab4}). S touto informací úzce souvisí dal¹í protokol XEP--0115 \cite{Xep0115}, který umo¾òuje zjistit podporované schopnosti klienta, pøípadnì které informace je ochoten pøijímat. Tato vlastnost bude popsána ní¾e v èásti zabývající se podporovanými vlastnostmi.

V¹echna tato roz¹íøení by mohla být pøidána pøímo do statusu viz pøíklad \ref{picPresence}, av¹ak ten je primárnì urèen k informování o pøítomnosti na IM síti. Hlavní rozdíl mezi PEP a obyèejným posílání stavu pomocí presence je v pravomoci klienta pøijmout nebo odmítnou informaci, na rozdíl od presence, je¾ je pøijata v¾dy.

Základ pøenosu informací zaèíná na stranì klienta, který chce v¹echny ve svém roster (kontakt) listu informovat o statusu. Za¹le zprávu obalenou v elementu \textit{iq} serveru. Ukázka této zprávy je prezentována na pøíkladu \ref{picPep}, který znázoròuje zaslání informace o druhu hudby, kterou v danou chvíli u¾ivatel poslouchá. Vyu¾ívá k tomu roz¹íøení User Tune, definovaném na øádku èíslo 5. Základ zprávy oznamující zaèátek vysílání informací o roz¹íøených statusech je v¾dy stejný. Li¹í se pouze øádkem 3. a obsahem elementu item v pøíkladu \ref{picPep}.

\begin{figure}[h]
\lstset{language=Xml ,caption={Zaèátku vysílání roz¹íøeného statusu.},label=picPep}
\begin{lstlisting}
       <iq from='user@jabbim.com' type='set' id='pub1'>
          <pubsub xmlns='http://jabber.org/protocol/pubsub'>
             <publish node='http://jabber.org/protocol/tune'>
                <item>
                   <tune xmlns='http://jabber.org/protocol/tune'>
                      <artist>Daniel Landa</artist>
                      <length>255</length>
             ...
\end{lstlisting}
\end{figure}

V pøípadì úspì¹ného pøijetí \textit{iq} zprávy serverem, ka¾dý, kdo se zaregistroval k odebírání roz¹íøených statusù, obdr¾í oznámení ve formì \textit{message}. Oznámení bude také doruèeno v¹em resources. Celá zpráva i v¹echny dal¹í nále¾itosti jsou uvedeny v pøíloze \ref{Erozsireni}.

\subsubsection*{Podporované vlastnosti}\label{XEP-0115}
Jednotlivá roz¹íøení protokolu XMPP jsou nepovinná, a proto nemusí být ve v¹ech klientských aplikacích podporována. Pro zji¹tìní podporovaných roz¹íøení se pou¾ívá XEP-0115 Entity Capabilities \cite{Xep0115}. Toto roz¹íøení výraznì sni¾uje poèet a velikost komunikací a pøenosù zpráv mezi u¾ivateli. Dotazem zobrazeným na pøíkladu \ref{picCap} je zji¹tìna schopnost jednotlivých klientù, kterou následnì server vyu¾ije pro správné smìrování roz¹íøených statusù. V¹echny zde zmiòované roz¹íøení a protokoly z této kapitoly 
%\ref{Rozsireni} 
je mo¾né u ka¾dého klienta (seznam klientù obsahuje tabulka v pøíloze \ref{Erozsireni}) vyèíst z atributu \textit{ver} (druhá èást u atributu node), který je vypoèítán ze v¹ech podporovaných protokolù klienta, viz \cite{Xep0115}.

\begin{figure}[h]
\lstset{language=XML ,caption={Dotaz na podporované protokoly.},label=picCap}
\begin{lstlisting}
  <iq from="user@jabbim.com" id="disco1"
      to="jabinfo@jabbim.com/bot" type="get">
     <query xmlns="http://jabber.org/protocol/disco#info"
        node="http://code.google.com/p/exodus#QgayPKawpkPSDYmwT/WM94uAlu0="/>
  </iq>
\end{lstlisting}
\end{figure}

\subsubsection*{Dal¹í roz¹íøení}\label{XEP-0115}
V následujících nìkolika odstavcích budou pøiblí¾eny specifikace jednotlivých roz¹íøení XEP, které slou¾í jako zdrojová data pro dolování a jsou relevantní k tématu práce.

Prvním roz¹íøením, nad rámec základních vlastností Jabberu, které zde bude podrobnìji rozebráno je elektronická verze klasické vizitky nebo--li \textit{VCard}. Jeho specifikací se zabývají dva standardy. Jeliko¾ novìj¹í verze XEP dokumentu \cite{Xep0292} se v dobì psaní této práce nacházelo ve stavu \uv{experimental}, bylo pou¾ito verze star¹í \cite{Xep0054}. Jednodu¹e øeèeno je VCard struktura, která nese informace o u¾ivateli jako je jméno, pøíjmení, e--mail, adresa bydli¹tì i zamìstnání a dal¹í údaje. Data jsou dále zveøejòována na sítí, z èeho¾ vyplývá, ¾e jsou dostupná ostatním u¾ivatelùm. Vyplnìní tìchto osobních údajù je dobrovolné a tak se u nìkterých u¾ivatelù nachází pouze pøezdívka a JID, které jsou èasto pøeddefinovány automaticky. Nedílnou souèástí v¹ech sociálních a komunikaèních systému je tzv. \uv{Avatar}\footnote{fotografie, logo nebo ikona}. V síti Jabber tomu není jinak, a proto je samotný obrázek zahrnut pøímo do VCard v polo¾ce \textit{photo}. Podrobnìj¹í informace o jeho nastavení a pøijímání je mo¾né nalézt v \textit{vCard-Based Avatars} \cite{Xep0153}, který jej definuje.

Díky základní podmínce XMPP protokolu (otevøenost) existuje mnoho rùzných aplikací pomocí, kterých lze v síti Jabber komunikovat. S programy, pou¾ívanými u¾ivateli, úzce souvisí dal¹í zde implementované roz¹íøení. Jedná se o realizaci \textit{Software Version} dokumentu \cite{Xep0092}, který se právì zabývá získáváním informací o samotných aplikacích. Je--li toto roz¹íøení podporováno je díky nìmu mo¾né zjistit jméno a verzi pou¾ívané aplikace. Informace o operaèního systému èasto nejsou kvùli bezpeènosti ani vyplnìny. Podrobnìj¹í informace o softwarové výbavì klienta je mo¾né zjistit pomocí XEP \cite{Xep0115}, o kterém ji¾ bylo  døíve psáno v odstavci zabývajícím se podporovanými vlastnostmi klientských aplikací.

S roz¹íøením tzv. \uv{chytrých} mobilních zaøízení mezi ¹ir¹í veøejnost vzniklo nìkolik nových disciplín spojených s urèováním zemìpisné polohy jako je napøíklad geocaching. Geografická poloha \cite{Xep0080} je pøená¹ena jak ve formì GPS\footnote{Global Positioning System} souøadnic tak i ve tvaru \uv{civilním}, jako je stát, ulice, mìsto nebo èíslo poschodí v budovì a dal¹í. Mnoho aplikací, které mají k dispozici GPS pøijímaè, vysílají a aktualizují zemìpisné informace automaticky, napøíklad po urèité dobì nebo zmìnì polohy o urèitou vzdálenost. Toto a dal¹í ní¾e popsané roz¹íøení jsou postaveny na ji¾ zmiòovaném PEP. Nìkteré èásti protokolù jsou zjednodu¹eny a pøipraveny tím pro \uv{mobilní instant messaging}.

Pro sdìlení informací o stavu klienta není v základní verzi Jabberu mnoho. Pomocí presence je mo¾né \uv{pouze} prozradit zda je u¾ivatel pøipraven komunikovat nebo je momentálnì nedostupný a to v nìkolika verzích li¹ících se délkou nepøítomnosti. Pokroèilej¹í nastavení statusu nabízí \textit{User Mood} \cite{Xep0107} a to ve formì sdìlení souèasné nálady jako je napøíklad radost. Dal¹í mo¾né upøesnìní èinnosti u¾ivatele jsou definovány v \textit{User Activity} \cite{Xep0108}, kde ka¾dá èinnost je slo¾ena z povinné obecné kategorie a nepovinné, která informaci upøesòuje. Pøíkladem mù¾e být \textit{eating} a \textit{having\_a\_snack}.

K poslednímu roz¹íøení implementovanému v této práci patøí \textit{User Tune} \cite{Xep0118}, které umo¾òuje u¾ivateli ¹íøit informace o aktuálnì poslouchané hudbì. Nìkteré dne¹ních hudební pøehrávaèe doká¾í automaticky spolupracovat s IM klientem a pøedávat informace o hudbì bez nutného lidského zásahu.

Vý¹e popsáná roz¹íøení nejsou z velké míry podporována aplikacemi, co¾ zpùsobuje nespokojenost mnoha u¾ivatelù vyu¾ívající hlavnì mobilní zaøízení. Napøíklad v pøedcházející zmiòované èásti o poslouchané hudbì, pøi nepodporovanosti programu, je posíláno pomocí normální presence. Jméno skladatele, alba a dal¹í podrobnosti jsou shrnuty do statusu, tudí¾ jsou doruèeny v¹em u¾ivatelùm z kontakt listu.






\chapter{Data mining}

Tøetí kapitola se zabývá procesem dobývání znalostí z databází. Popisuje jej jako disciplínu, která vznikla za úèelem vytì¾ení informací z dat, která jsou v nepøeberném mno¾ství ukládána v databázích. Díky velikosti dne¹ních diskù, objem ukládaných dat neustále roste. S tím také úzce souvisí zvìt¹ující se pomìr nepotøebných a za¹umìlých dat vùèi u¾iteèným informacím. 
%Jak kdysi øekl øekl anglický filozof Bacon: \uv{ve znalostech je síla}%Anglický filozof Bacon kdysi øekl, ¾e ve znalostech je síla (Knowledge itself is a power.

Na zaèátku kapitoly je rozebrán pojem získávání znalostí databází, jeho¾ jednu podstatnou èást tvoøí samotný data ming. Dále je vysvìtlena základní terminologie, pro kterou bylo èerpáno z \cite{IIS}. Celá první podkapitola je vìnována vybraným metodám pro dolování dat a vlastnostem, které je od sebe navzájem odli¹ují. Jsou zde rozebrány \textit{asociaèní pravidla}, pro jejich¾ popis bylo èerpáno z \cite{Berka}. Pro ostatní metody, které jsou popsány dále, byla jako zdroj informací pou¾ita kniha \cite{Han}. Poté následuje druhá podkapitola, která se podrobnìji zabývá jednou z metod pro dolování dat a to \textit{shlukováním}. Obsahem této èásti jsou ji¾ konkrétní algoritmy pro shlukování dat \cite{Rezankova,Bramer} a také metoda \textit{k--Means} vyu¾ívaná v praktické èásti této práce. Kapitolu uzavírá pøehled vybraných programù pro data minig a podrobnìj¹í seznámení s programem \textit{RapidMiner}, který je v této práci vyu¾íván pro samotné dolování.


\subsection*{Terminologie}
Pojem data mining nebo--li èesky dolování dat se zaèal ve vìdeckých kruzích objevovat poèátkem 90. let 20. století. První zmínka pochází z konferencí vìnovaných umìlé inteligenci (IJCAI'89\footnote{International Joint Conference on Artificial Intelligence}--mezinárodní konference konaná v Detroitu, AAAI'91\footnote{Association for the Advancement of Artificial Intelligence} a AAAI'93--americké konference v Californii a Washingtonu, D.C) \cite{Berka}. 

Tradièní metoda získání informací z dat je realizována jejich manuální analýzou a interpretací. V praxi ji napøíklad nalezneme v odvìtví zdravotnictví, vìdy, marketingu (efektivita reklamních kampaní, segmentace zákazníkù) a dal¹ích. Pro tyto a mnoho dal¹ích disciplín je manuální zpracování pøíli¹ pomalé, drahé a vysoce subjektivní. Dal¹í dùvod k pøechodu na jiné metody je objemnost dat, která dramaticky vzrostla a tudí¾ se manuální analýza stává zcela nepraktická. Databáze rychle rostou ve dvou následujících kategoriích:
\begin{enumerate}
   \item poèet záznamù nebo--li objektù v databázi
   \item poèet polí nebo--li atributù objektù v databázi
\end{enumerate}

Proces data mining je pouze jedna èást z odvìtví nazývané dobývání znalostí z databází nebo--li KDD\footnote{Knowledge Discovery in Database} definované ní¾e v definici è. \ref{KDD}. Vznik disciplíny KDD je dùsledkem nepøeberného mno¾ství automaticky sbíraných dat, která je potøeba dále vyu¾ívat. Podstatným znakem celého procesu je správnost reprezentace výsledkù formou, která má k u¾ivateli nejblí¾e. Jako pøíklad bude uvedena implikace ve tvaru rozhodovacích pravidel, asociaèní pravidla, rozhodovací stromy, shluky podobných dat a dal¹í. Základem KDD je praktická pou¾itelnost metod. Oèekává se zji¹tìní nových skuteèností namísto prezentování ji¾ známých informací.

\newtheorem{definice}{Definice}[section]
\begin{definice}\label{KDD}
  \textnormal {
KDD je chápáno jako interaktivní a iterativní proces tvoøený kroky selekce, pøedzpracováním, transformace, vlastního \uv{dolování} (data--mining viz \ref{Data Mining}) a interpretace \cite{Berka}.
}
\end{definice}

Grafické znázornìní definice \ref{KDD} je popsáno schématem na obrázku \ref{picFayyad}, který prezentuje èasový harmonogram v KDD. Schéma znázoròuje následnost jednotlivých procesù, které tvoøí KDD. KDD je iterativní proces, z èeho¾ vyplývá, ¾e skuteènosti nalezené v pøede¹lých èástí zjednodu¹í a zpøesní vstupy pro následující fáze. Jakmile jsou znalosti získány, jsou prezentovány u¾ivateli. Pro pøesnost mù¾e být èást procesu KDD je¹tì upravena. Tím budou získány \uv{pøesnìj¹í a vhodnìj¹í} výsledky.

\begin{figure}[h]
\begin{center}
\input{datamining}
\caption{Proces dobývání znalostí z databází podle knihy autora Fayyad \cite{Fayyad}.}
 \label{picFayyad}
\end{center}
\end{figure}

Získávání znalostí z databází je proces slo¾en z nìkolika krokù vedoucích od surových dat k formì nových poznatkù. Iterativní proces je slo¾en, tak jak je prezentováno v \cite{Han}, z následujících krokù:

\begin{itemize}
   \item {
    \begin{description}
      \item[èi¹tìní dat] -- fáze, ve které jsou nepodstatné údaje odstranìny z kolekce.
    \end{description}
   }
   \item {
    \begin{description}
      \item[integrace dat] -- kombinování heterogenních dat z nìkolika zdrojù do spoleèného jediného zdroje.
    \end{description}
   }
   \item {
    \begin{description}
      \item[výbìr dat] -- rozhodování o relevantních datech.
    \end{description}
   }
   \item {
    \begin{description}
      \item[transformace dat] -- také známý jako konsolidace dat. Fáze, ve které jsou vybraná data transformována do formy vhodné pro dolování.
    \end{description}
   }
   \item {
    \begin{description}
      \item[data mining] --  zásadní krok, ve kterém jsou aplikovány vzory na data.
    \end{description}
   }
   \item {
    \begin{description}
      \item[hodnocení modelù] -- vzory dat zastupují získané znalosti.
    \end{description}
   }
   \item {
    \begin{description}
      \item[prezentace znalostí] -- koneèná fáze, zji¹tìné poznatky jsou reprezentovány u¾ivateli. Tento základní krok vyu¾ívá vizualizaèní techniky, které pomáhají u¾ivatelùm porozumìt a správnì interpretovat získané výsledky.
    \end{description}
   }
\end{itemize}

Jak je uvedeno v \cite{Han}, bì¾nì jsou nìkteré z tìchto krokù kombinovány dohromady. Kroky èi¹tìní dat a integrace dat mohou být provedeny spoleènì, tak jako to prezentuje schéma na obrázku \ref{picFayyad}.

%\subsection*{Základní pojmy}
V této podsekci jsou ve struènosti vysvìtleny základní nejdùle¾itìj¹í pojmy dále v práci vyu¾ívané.

Definic výrazu data mining se v odborné literatuøe nachází nìkolik. Zde uvedená je kombinací dvou \uv{definic} z \cite{DM}. %\textbf{Za pøedchùdce tohoto oboru se pova¾uje vìdní obor statistika, ze které se postupem èasu vyèlenil.}

\begin{definice}\label{Data Mining}
  \textnormal {
Data Mining je proces objevování znalostí, který pou¾ívá rùzné analytické nástroje slou¾ící k odhalení døíve neznámých vztahù a informací z velmi rozsáhlých databází. Výsledkem je predikèní model, který je podkladem pro rozhodování \cite{DM}.
}
\end{definice}

Mezi dal¹í èetnì se vyskytující pojmy v tomto odvìtví patøí napøíklad data, znalosti a informace. Tyto termíny jsou èasto mezi sebou zamìòovány, proto jsou ní¾e jejich významy striktnì definovány tak jako v \cite{IIS}.

Jedna z nìkolika existujících definic pojmu data je uvedena v definici è. \ref{Data}, která je popisuje z pohledu informaèního. Data èasto nemají sémantiku (význam) a bývají zpracována èistì formálnì.

\begin{definice}\label{Data}
  \textnormal {
Data jsou z hlediska poèítaèového pouze hodnoty rùzných datových typù.
}
\end{definice}

Informace lze chápat jako data, která byla obohacena o sémantiku (význam), jsou tedy ji¾ zpracovaná a interpretována u¾ivatelem. Znalosti, jsou øazeny do stejné kategorie jako informace, ale jejich interpretace bývá je¹tì slo¾itìj¹í. Èasto bývají tvoøeny shluky informací, proto jsou reprezentovány jako odvozené informace. Podle studijní opory \cite{IIS} jsou znalosti informace, které jsou zaøazeny do souvislostí.


\section{Metody dolovaní dat}\label{MetodyDolovaiDat}
Základ metod dolování dat je zalo¾en na statistice, posledních poznatcích z umìlé inteligence èi strojového uèení. Hlavní cíl tìchto netriviálních metod je spoleèný -- snaha zji¹tìné výsledky prezentovat srozumitelnou formou. Pro vìt¹inu pou¾ívaných metod je spoleèná vlastnost pøedpoklad, ¾e objekty popsané pomocí podobných charakteristik patøí do stejné skupiny (uèení na základì podobnosti similarity--based learning). Objekty obsahující atributy, lze pøevést na body v \textit{n}--rozmìrném prostoru, kde \textit{n} reprezentuje poèet atributù. Vychází z pøedstavy podobnosti bodù tvoøící urèité shluky v prostoru.

Dal¹í rozdíly mezi metodami, které byly prezentovány v \cite{Berka}, spoèívají ve:
\begin{itemize}
   \item schopnosti reprezentace shlukù (napø. otázka lineární separability)
   \item srozumitelnosti nalezených znalostí pro u¾ivatele (symbolické vs. subsymbolické metody)
   \item efektivnosti znovupou¾ití nalezených znalostí
   \item vhodnosti typù dat
   \item a dal¹í ...
\end{itemize}

Problémy, které data mining øe¹í, se rozdìlují do nìkolika skupin. Mezi výèet z nich vybraných, které budou následnì rozebrány, patøí \textit{asociaèní pravidla}, \textit{klasifikace}, \textit{modely}, \textit{predikce} a \textit{shlukování}.

\subsection*{Asociaèní pravidla}
Pøi popisu asociaèních pravidel, která jsou zalo¾ena na syntaxi \textit{IF-THEN}, bylo èerpáno z \cite{Berka}. Jejich roz¹íøení se datuje do 90. let 20. století, kdy byly panem Agrawalem pøedstaveny v souvislosti s analýzou \uv{nákupního ko¹íku}. 

Pou¾itelnost bude vysvìtlena právì na pøíkladu analýzy nákupního ko¹íku. Podstata pøíkladu je tvoøena zákazníkem a jeho systémem nakupování. Jsou zji¹»ovány produkty, které jsou nakupovány souèasnì. Hledají se nebo--li jsou vytváøeny spoleèné vazby (asociaèní pravidla) mezi výrobky a urèuje se jejich spolehlivost. Na základì tìchto závislostí je upravováno umístìní jednotlivých výrobkù.

Obecnì jsou tedy asociaèní pravidla pova¾ována za konstrukci, která z hodnot jedné transakce odvozuje mo¾nost výskytu závislostí v jiných transakcích. Jsou tedy hledány v¹echny vnitøní závislosti existující mezi daty.

Podle knihy Berky \cite{Berka} pøevedeme základní my¹lenku asociaèních pravidel \textit{IF--THEN} do jiné terminologie:
\begin{figure}[h]
\begin{verbatim}
                             Ant => Suc
\end{verbatim}
\end{figure}

kde \textit{Ant} bývá interpretován jednou mo¾ností z výètu -- pøedpoklad, IF, levá strana pravidla nebo ancedent a \textit{Suc} je chápan jako -- závìr, ELSE, pravá strana pravidla, sukcendent. Ní¾e jsou uvedeny základní vlastnosti:

\textit{n(Ant $\wedge$ Sus) = \textbf{a}}; \textit{n(Ant $\wedge$ $\neg$Sus) = \textbf{b}}; \textit{n($\neg$Ant $\wedge$ Sus) = \textbf{c}}; \textit{n($\neg$Ant $\wedge$ $\neg$Sus) = \textbf{d}}; \textit{n(Ant) = a+b = \textbf{r}}; \textit{n($\neg$Ant) = c+d = \textbf{s}}; \textit{n(Suc) = a+c = \textbf{k}};  \textit{n($\neg$Suc) = b+d = \textbf{l}};  \textit{n = a+b+c+d};

v¹echna pravidla jsou shrnuta v tabulce \ref{tabAsoc}, z nich¾ jsou dále poèítány rùzné charakteristiky a následnì tak hodnoceny zji¹tìné znalosti.

\begin{table}[ht]
\begin{center}
\begin{tabular}{ c  c c c} 
\rowcolor[gray]{0.9}
		& \textbf{Suc} 	& \textbf{$\neg$Suc}	&$\sum$\\
Ant		& a		& b			& r\\
$\neg$Ant	& c		& d			& s\\
$\sum$		& k		& l			& n\\ \hline
\end{tabular}
\caption{Kontingenèní tabulka pøevzata z \cite{Berka}.}
\label{tabAsoc}
\end{center} 
\end{table}

Mezi základní charakteristiky asociaèních pravidel podle Agrewalova patøí \textit{podpora} a \textit{spolehlivost}.


\subsection*{Klasifikace}
Klasifikace bude opìt vysvìtlena na pøíkladu, pøevzatého z \cite{IIS}. Podle obsahu databáze nebo dotazníku bude ka¾dý klient banky zaøazen do rùzných krizových skupin. Na základì tìchto skupin pracuje \uv{credit skóring}, je¾ klientovi poskytne nebo odepøe napøíklad úvìr v bance. Dal¹í pøíklady vyu¾ití jsou napøíklad ve zdravotnictví. Na základì zdravotního stavu pacienta a jeho pøíznakù, je pacient zaøazen do tøíd, které reprezentují jednotlivé nemoci.

Klasifikací jsou, podle \cite{Han}, jednotlivé zkoumané elementy rozdìleny (podle hodnot atributù) do vhodných kategorií, které jsou pøedem vytvoøeny z navzájem podobných objektù (tvorba profilù tøídy). Pøi této metodì je upøednostòována pøesnost pøed jednoduchostí a rychlostí. 
%Je snaha o nalezení obecných závìrù z chování dat. 
Zdroje klasifikovaných objektù jsou vìt¹inou tvoøeny jednotlivými øádky v databázi. Vzory dat vytváøí instance, Jejich¾ vlastnosti reprezentují atributy vyjádøené èíselnou hodnotou.

Z matematického pohledu klasifikace pøedstavuje funkci o více promìnných \cite{Han}. Atribut instance odpovídá promìnné a funkèní hodnota výstupu.

\subsubsection*{Modely}
Základem modelù jsou trénovací data. Ní¾e uvedený pøíklad vybraných klasifikaèních modelù, byl èerpán z \cite{Han}:
\begin{itemize}
   \item Rozhodovací stromy
   \item Neuronové sítì
   \item Statistické metody
   \item Klasifikaèní pravidla
   \item Vyu¾ití vzdálenosti
   \item a dal¹í ...
 \end{itemize}


\subsection*{Predikce}
Predikce je øazena mezi velmi známé procesy, které na základì získaných znalostí pøedpovídají následující vývoj. Chronologicky seøazená data a vývoj jejich hodnot v minulosti tvoøí základ pro urèení hodnot budoucích. Pøedpokládá se, ¾e na základì informací získaných z dat v minulosti, bude mo¾né postavit modely, které se budou chovat stejnì nebo alespoò podobnì i v budoucnu. Vyu¾ití naleznou v pøedpovìdi poèasí (z namìøených meteorologických hodnot se urèují budoucí pøedpokládané teploty), pøi vývoji cen na burze a dal¹ích. Podklady pro popis predikce byly èerpány z \cite{Berka,Han}.


\subsection*{Shlukování}
Metoda zamìøená na dìlení objektù do pøedem neznámých skupin. Proces dìlení probíhá na základì specifikace objektù a jejich odli¹nosti od ostatních shlukù. Tato èást, pro kterou bylo èerpáno z \cite{Rezankova,Bramer}, bude podrobnì rozebrána v následující podkapitole.

\section{Shlukování}\label{KapShluk}
V této podkapitole je shlukování rozdìleno na nìkolik metod shlukové analýzy podle \cite{Han}. U ka¾dé z nich jsou popsány její základní vlastnosti a uvedeny nejroz¹íøenìj¹í algoritmy. Poslední metoda \textit{metoda rozkladu} je rozebrána podrobnìji z dùvodu jejího praktického vyu¾ití v této práci.

Shlukování je zamìøeno na dìlení objektù do pøedem neznámých skupin. Proces dìlení probíhá na základì specifikace objektù a jejich odli¹nosti od ostatních shlukù.

Vìt¹ina ní¾e popsaných metod a algoritmù je zalo¾ena na výpoètu vzdáleností mezi objekty. Tato vzdálenost lze vyjádøit rùznými mírami, podle knihy \cite{Berka} napøíklad pomocí \textit{Hammingovy vzdálenosti} (dH), \textit{Euklidovské vzdálenosti} (dE) a \textit{Èeby¹evovy vzdálenosti} (dC). Rozdíl mezi tìmito typy urèující vzdálenosti, graficky vyjadøuje obrázek è. \ref{picStat}. Kde $X1$ je støed, od nìho¾ jsou jednotlivými obrazci znázornìny dané vzdálenosti. Konkrétnì pomyslné body umístìné po obvodu kruhu jsou v¹echny stejnì vzdáleny od støedu $X1$. Tato vzdálenost je oznaèena jako Euklidovská. Dal¹í 2D tìleso ètverec, který je vodorovný s osami $A1$ a $A2$ prezentuje Èeby¹evovu vzdálenost. Po obvodu posledního obrazce, ètverce otoèeného o 45° podle osy A1, jsou v¹echny pomyslné body stejnì vzdáleny od bodu $X1$ Hammingovou vzdáleností.

\begin{figure}[h]
\begin{center}
\input{statistika}
\caption{Srovnání výpoètu vzdáleností od bodu $x_{1}$ \cite{Berka}.}
 \label{picStat}
\end{center}
\end{figure}

\subsection*{Metody zalo¾ené na modelu}
Metody zalo¾ené na modelu se pokou¹í pøiøadit data k urèitému matematickému modelu na základì spoleèných optimalizovaných vlastností. Vìt¹ina procesù je zalo¾ena na pøedpokladu generování dat pomocí standardních statistik.

Mezi zástupné metody této shlukovací analýzy se øadí Expectation--Maximization (EM) a SOON\footnote{Self Organizing Oscillator Network}. Algoritmus SOON je zalo¾en na neuronové síti. Je to metoda vycházející z algoritmu SOM\footnote{Self--Organizing Map} \cite{Rezankova}. Metoda EM je roz¹íøením algoritmu \textit{k--means}, který bude podrobnì rozebrán v následující èásti.% \ref{kMeans}.


\subsection*{Metody hierarchické}
Hlavní princip metody hierarchického shlukování je zalo¾en na tvorbì stromové hierarchie shlukù, která je známá pod názvem \textit{dendrogram}. Hierarchické metody, podle \cite{Han}, mohou být rozdìleny do dvou skupin a to na základì principu, kterým  jsou dendrogramy vytváøeny. První mo¾nost je \textit{aglomerativní pøístup}, který shlukuje men¹í shluky, kdy výsledkem je jen jeden. Druhý pøístup, \textit{divizní}, je zalo¾en na opaèném pøedpokladu. Tedy ¾e na poèátku je jeden velký shluk, který je postupnì rozdìlován dokud není poèet shlukù roven poètu objektù \cite{Rezankova}. Mezi zástupce této metody napøíklad patøí algoritmus AGNES\footnote{AGglomerative Nesting}.


\subsection*{Metody zalo¾ené na møí¾ce}
Metody zalo¾ené na møí¾ce kvantují datový prostor do koneèného poètu pravoúhlých bunìk, které jsou uspoøádány do víceúrovòové møí¾kové struktury. Zmínìná struktura tvoøí základ pro shlukové operace. Hlavní výhoda tohoto pøístupu je rychlost zpracování, které vìt¹inou nebere ohled na poèet datových objektù. Èas zpracování závisí pouze na poètu bunìk v ka¾dé dimenzi kvantovaného prostoru. 

Mezi zástupce metod zalo¾ených na møí¾ce patøí metoda STING\footnote{STatistical INformation Grid}, který pracuje se statickými informacemi ulo¾enými v buòkách møí¾ky. Algoritmus je rozdìlen do dvou èástí. První si klade za cíl rekurzivnì rozdìlit datový prostor na pravoúhlé buòky. Druhá fáze testuje spojitost mezi sousedy relevantních bunìk \cite{Rezankova}.

Mezi dal¹í metody zalo¾ené na møí¾ce patøí 
%CLIQUE\footnote{CLustering In QUEst} a 
WaveCluster\footnote{Clustering Using Wavelet Transformation}, vyu¾ívající vlnkové transformace k rozdìlení prostoru dat. Tato transformace zdùrazòuje shluky v prostoru a objekty jim vzdálené potlaèuje \cite{Han}.



\subsection*{Metody zalo¾ené na hustotì}
Vychází z \textit{m}--rozmìrného prostoru, ve kterém jsou zobrazeny objekty ve formì bodù. Místa v prostoru s vìt¹í koncentrací objektù ve srovnáním s ostatními oblastmi jsou nazývány shluky. Výchozí pøedpoklad je existence okolí jednotlivých bodù (sousedství). Jedna z charakteristik metod zalo¾ených na hustotì je schopnost vypoøádat se s vzdálenými hodnotami, oznaèovanými jako ¹um \cite{Rezankova}.

Jako pøíklad je uvedena metoda DBSCAN\footnote{Density--Based Spatial Clustering of Applications with Noise}, která
%, OPTICS\footnote{Ordering Points To Identify the Clustering Strukture} a DENCLUE\footnote{DENsity--base CLUstering}. 
je zalo¾ena na hustotì objektù v prostoru. U jednotlivých objektù je zkoumáno jejich okolí. Algoritmus je ovlivòován dvìma parametry $\varepsilon$ (velikost shluku) a $MinPts$ (minimální poèet objektù v daném shluku), které spolu úzce souvisí (viz \cite{Han}). Bod splòující obì podmínky je oznaèen za jádro. Za pomocí jader je roz¹iøována mno¾ina objektù spojených na základì hustoty. Obsahuje--li jádro $x_{1}$ ve svém okolí dal¹í jádro $x_{2}$ znamená to, ¾e jádro $x_{1}$ je pøímo dosa¾itelné z jádra $x_{2}$. Tímto zpùsobem jsou vytváøeny výsledné \textit{shluky}. V opaèném pøípadì, body, které nesplòují dvì zmínìné podmínky, jsou oznaèeny jako \textit{¹um}.

%Pøíklad postupu algortimu DBSCAN zobrazuje obrázek è. \ref{dbscan}. Kde $\varepsilon$--sousedství tvoøí kruh a $MinPts$ má hondotu 3.
%\begin{figure}[h]
%\begin{center}
%\input{dbscan}
%\caption{Algoritmus DBSCAN \cite{Han}.}
% \label{dbscan}
%\end{center}
%\end{figure}

\subsection*{Shlukování velkých dat}
V¹echny zde doposud zmiòované metody poskytují dobré výsledky pouze s malým poètem dimenzí, tak jak je to popsáno v \cite{IIS}. S narùstajícím poètem atributù roste poèet nerelevantních dimenzí urèených pro shlukování. S tímto také pøibývá zvìt¹ená produkce za¹umìní a znesnadnìní nalezení relevantních shlukù. Data jsou roztrou¹ena do mnoha dimenzí a tím odpadá mo¾nost pou¾ití vzdálenostních funkcí.

Zmínìné problémy shlukování velkých dat øe¹í dvì techniky \textit{metoda transformace rysù} a \textit{metoda výbìru atributù}. Pro efektivní shlukování je mo¾né pou¾ít napøíklad algoritmus CLIQUE\footnote{CLustering In QUEst}.
%PROCLUS\footnote{PROjested CLUStering}, ENCLUS\footnote{ENntropy--based CLUStering} 
%a dal¹í.

\subsection*{Metody rozkladu}\label{MetodyRozkladu}
...
\subsubsection*{\textit{k}--Means}\label{kMeans}
...popis a za pis algoritmu
%\subsubsection*{\textit{k}--Medoids}
...




\section{Programy}
\subsection*{Fitminer}
\subsection*{Rapid miner}
\subsection*{Weka}
\chapter{Implementace}
%\section{Slepá ulièka}
%Pùvodní návrh práce od stávajícího se odli¹uje v tìchto bodech:
%\begin{enumerate}
%   \item neustále pøipojen ve stavu invisible
%   \item pøijímat zprávy.
%\end{enumerate}
%První bod nemohl být splnìn kvùli nepodporovanému stavu invisible. Neexistuje ¾ádná schválená ani rozpracovaná verze XEPu, která by ukazovala jak stavu neviditelnosti dosáhnout.
%Druhý bod pùvodního návrh ztroskotal na neschopnosti Jabber klientù a serverù pracovat korektnì s prioritou. V XEP-XXXX se pouze doporuèuje nastavení stejné hodnoty priority do v¹ech resource. Tato vlastnost by mìla poskytnout mo¾nost rozesílat zpráva v¹em zdrojùm daného úètu se stejnou prioritou. Samozøejmì by nesmìl mít ¾ádný jiný zdroj priority vy¹¹í.
\section{Databáze}
\subsection*{Návrh databáze}
\begin{figure}[hb]
\begin{center}
\input{Database1}
\caption{Struktura databáze}
 \label{pic1}
\end{center}
\end{figure}
\section{Architektura}
--robot plus databaze
--rapidminer--spusteni davkove/vlastni algoritmus v PHP
--webova implementace prezentuje vysledky
\section{Robot}
--class diagram, pomoci nej popsat strukturu, mozne rozsireni
\subsection*{gloox}
Gloox je stabilní Jabber/XMPP knihovna vydávána pod licencí GNU GPL. Je urèena pro vývoj klienta a komponent. Jeliko¾ je psána v ANSCI C++ mezi podporované platformy patøí Linux, Windows, Mac OS X, Symbian/Nokia S60, FreeBSD a dal¹í systémy stavìjící na ANSI C++ kompilátor.

Pomocí knihovny gloox je psán bot v této práci. Byla vybrána na základì po¾adavku psaní programu v jazyce C/C++ a operaèním systému Linux. V porovnání s jinými knihovnami pro jazyk C nebo C++ disponuje lep¹í podporou a dokumentací. Gloox plnì podporuje standart XMPP Core \cite{Rfc3920} a z vìt¹í èásti i standard XMPP IM \cite{Rfc3921}. Dodateènì je plnì podporováno kolem 30 XEP standardù napøíklad XEP-0054 vcard-temp a dal¹í.

\subsection*{Návrh bota}
%\section{Knihovny, jazyk}
%\section{Jiné produkty}
\subsection*{Transformace}
temporalni databaze
\chapter{Vyhodnocení výsledkù}
--charakter dat, jaka data jsem nasbiral
--
\chapter{Závìr}
%\cite{Schroter, Ejabberd, Openfire, Jabberd2, Jabberd14, Prosody, Tigase, Xep0060, Xep0163}
%=========================================================================
